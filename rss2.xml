<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Brooks</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>凡心所向，素履所往，生如逆旅，一苇以航。</description>
    <pubDate>Wed, 29 Dec 2021 13:43:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Rxjava1.x 升级到 Rxjava2.x</title>
      <link>http://example.com/2021/12/23/Rxjava1-x-%E5%8D%87%E7%BA%A7%E5%88%B0-Rxjava2-x-%E7%AC%94%E8%AE%B0/</link>
      <guid>http://example.com/2021/12/23/Rxjava1-x-%E5%8D%87%E7%BA%A7%E5%88%B0-Rxjava2-x-%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 23 Dec 2021 09:48:28 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;升级缘由&quot;&gt;&lt;a href=&quot;#升级缘由&quot; class=&quot;headerlink&quot; title=&quot;升级缘由&quot;&gt;&lt;/a&gt;升级缘由&lt;/h1&gt;&lt;p&gt;1、官方声明：版本 1.x 最终的寿命为&lt;strong&gt;2018 3月31日&lt;/strong&gt;。不会发生进一步的开发、支持、维护、PR 和更新。 （&lt;a href=&quot;https://github.com/ReactiveX/RxJava%EF%BC%89&quot;&gt;https://github.com/ReactiveX/RxJava）&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="升级缘由"><a href="#升级缘由" class="headerlink" title="升级缘由"></a>升级缘由</h1><p>1、官方声明：版本 1.x 最终的寿命为<strong>2018 3月31日</strong>。不会发生进一步的开发、支持、维护、PR 和更新。 （<a href="https://github.com/ReactiveX/RxJava%EF%BC%89">https://github.com/ReactiveX/RxJava）</a></p><span id="more"></span> <p>2、RxJava1 中 Observable 不能很好地支持 backpressure ，会抛出MissingBackpressureException。在 RxJava2 中 Oberservable 不再支持 backpressure ，而使用新增的 Flowable 来支持 backpressure 。</p><p>3、RxJava 2.x 在性能和内存利用率方面普遍优于 1.x  (<a href="https://github.com/akarnokd/akarnokd-misc/issues/2">https://github.com/akarnokd/akarnokd-misc/issues/2</a>)</p><p>4、项目中存在多个Rxjava2版本和Rxjava1,（三方库依赖Rxjava）,客户端使用混乱，重复依赖~</p><h1 id="差异对照"><a href="#差异对照" class="headerlink" title="差异对照"></a>差异对照</h1><h2 id="0、导包不同"><a href="#0、导包不同" class="headerlink" title="0、导包不同"></a>0、导包不同</h2><p>RxJava2 导入包一般多了一个reactivex</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.reactivex.Observable;</span><br></pre></td></tr></table></figure><h2 id="1、新增Flowable"><a href="#1、新增Flowable" class="headerlink" title="1、新增Flowable"></a>1、新增Flowable</h2><p>RxJava1 中 Observable 不能很好地支持 backpressure ，会抛出MissingBackpressureException。所以在 RxJava2 中 Observable 不再支持 backpressure ，而使用新增的 Flowable 来支持 backpressure 。</p><h2 id="2、ActionN-和-FuncN-改名"><a href="#2、ActionN-和-FuncN-改名" class="headerlink" title="2、ActionN 和 FuncN 改名"></a>2、ActionN 和 FuncN 改名</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Action0 改名成 Action</span><br><span class="line">Action1 改名成 Consumer</span><br><span class="line">Action2 改名成了 BiConsumer</span><br><span class="line">Action3 - Action9都不再使用了</span><br><span class="line">ActionN 变成了 Consumer</span><br><span class="line">    </span><br><span class="line">Func1 改名成 Function</span><br><span class="line">Func2 改名成 BiFunction</span><br><span class="line">Func3 - Func9 改名成 Function3 - Function9，</span><br><span class="line">FuncN 由 Function&lt;Object[], R&gt; 取代。对应的抽象方法也有所修改，call需要修改为apply</span><br></pre></td></tr></table></figure><h2 id="3、Observable-OnSubscribe-gt-ObservableOnSubscribe"><a href="#3、Observable-OnSubscribe-gt-ObservableOnSubscribe" class="headerlink" title="3、Observable.OnSubscribe -&gt; ObservableOnSubscribe"></a>3、Observable.OnSubscribe -&gt; ObservableOnSubscribe</h2><pre><code>Observable.OnSubscribe 改成了 ObservableOnSubscribe</code></pre><h2 id="4、Observable-Transformer-gt-ObservableTransformer"><a href="#4、Observable-Transformer-gt-ObservableTransformer" class="headerlink" title="4、Observable.Transformer -&gt; ObservableTransformer"></a>4、Observable.Transformer -&gt; ObservableTransformer</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Observable.Transformer 改成了 ObservableTransformer</span><br></pre></td></tr></table></figure><h2 id="5、Observable-from-gt-Observable-fromIterable"><a href="#5、Observable-from-gt-Observable-fromIterable" class="headerlink" title="5、Observable.from  -&gt; Observable.fromIterable"></a>5、Observable.from  -&gt; Observable.fromIterable</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Observable.from  -&gt; Observable.fromIterable </span><br></pre></td></tr></table></figure><h2 id="6-Subscription-gt-Disposable"><a href="#6-Subscription-gt-Disposable" class="headerlink" title="6.  Subscription -&gt; Disposable"></a>6.  Subscription -&gt; Disposable</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在 RxJava2 中，由于已经存在了 org.reactivestreams.subscription 这个类，为了避免名字冲突将原先的 rx.Subscription 改名为 io.reactivex.disposables.Disposable。</span><br><span class="line"></span><br><span class="line">顺便说下，Disposable必须单次使用，用完就要销毁。</span><br></pre></td></tr></table></figure><h2 id="7、SubScriber-gt-Observer"><a href="#7、SubScriber-gt-Observer" class="headerlink" title="7、SubScriber -&gt; Observer"></a>7、SubScriber -&gt; Observer</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io.reactivex.Observer</span><br></pre></td></tr></table></figure><h2 id="8、ObservableOnSubscribe-中使用-ObservableEmitter-发送数据"><a href="#8、ObservableOnSubscribe-中使用-ObservableEmitter-发送数据" class="headerlink" title="8、ObservableOnSubscribe 中使用 ObservableEmitter 发送数据"></a>8、ObservableOnSubscribe 中使用 ObservableEmitter 发送数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ObservableOnSubscribe 不再使用 Subscriber 而是用 ObservableEmitter 替代。</span><br></pre></td></tr></table></figure><h2 id="9、Observer接口中-onCompleted-改成了-onComplete"><a href="#9、Observer接口中-onCompleted-改成了-onComplete" class="headerlink" title="9、Observer接口中 onCompleted 改成了 onComplete"></a>9、Observer接口中 onCompleted 改成了 onComplete</h2><h2 id="10、Schedulers-immediate-gt-Schedulers-trampoline"><a href="#10、Schedulers-immediate-gt-Schedulers-trampoline" class="headerlink" title="10、Schedulers.immediate( ) -&gt; Schedulers.trampoline( )"></a>10、Schedulers.immediate( ) -&gt; Schedulers.trampoline( )</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Schedulers.immediate( )的作用为在当前线程立即执行任务，功能等同于RxJava2中的Schedulers.trampoline( )</span><br></pre></td></tr></table></figure><h2 id="11-RxView-clicks-gt-RxBase-clicks-自定义处理事件"><a href="#11-RxView-clicks-gt-RxBase-clicks-自定义处理事件" class="headerlink" title="11.RxView.clicks  -&gt; RxBase.clicks 自定义处理事件"></a>11.RxView.clicks  -&gt; RxBase.clicks 自定义处理事件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">com.common.utils.rx.ViewClickOnSubscribe</span><br><span class="line">com.common.utils.rx.ViewLongClickOnSubscribe</span><br></pre></td></tr></table></figure><h2 id="12、CompositeSubscription-gt-CompositeDisposable"><a href="#12、CompositeSubscription-gt-CompositeDisposable" class="headerlink" title="12、CompositeSubscription -&gt; CompositeDisposable"></a>12、CompositeSubscription -&gt; CompositeDisposable</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io.reactivex.disposables.CompositeDisposable</span><br></pre></td></tr></table></figure><h2 id="13、Observable-takeFirst-gt-Observable-takeUntil"><a href="#13、Observable-takeFirst-gt-Observable-takeUntil" class="headerlink" title="13、Observable.takeFirst -&gt; Observable.takeUntil"></a>13、Observable.takeFirst -&gt; Observable.takeUntil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io.reactivex.Observable#takeUntil(io.reactivex.functions.Predicate&lt;? <span class="keyword">super</span> T&gt;)</span><br></pre></td></tr></table></figure><h2 id="14、Rxjava2-onNext方法不能回调-null对象，否则Emitterf发射器里会直接抛出异常："><a href="#14、Rxjava2-onNext方法不能回调-null对象，否则Emitterf发射器里会直接抛出异常：" class="headerlink" title="14、Rxjava2 onNext方法不能回调 null对象，否则Emitterf发射器里会直接抛出异常："></a>14、Rxjava2 onNext方法不能回调 null对象，否则Emitterf发射器里会直接抛出异常：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onNext called with null. Null values are generally not allowed in 2.x operators and sources.</span><br></pre></td></tr></table></figure><p>解决办法：使用一个对象包裹接口返回结果，将包装后对象发射出去，再次里面取出结果</p><h2 id="15、-Observable-just-null-替换"><a href="#15、-Observable-just-null-替换" class="headerlink" title="15、 Observable.just(null)  替换"></a>15、 Observable.just(null)  替换</h2><p>Rxjava2对just函数 进行了null校验，不允许发送null值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//io.reactivex.Observable#just(T) </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Observable&lt;T&gt; <span class="title">just</span><span class="params">(T item)</span> </span>&#123;</span><br><span class="line">      ObjectHelper.requireNonNull(item, <span class="string">&quot;item is null&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> RxJavaPlugins.onAssembly(<span class="keyword">new</span> ObservableJust&lt;T&gt;(item));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16、异常捕获处理-setErrorHandler"><a href="#16、异常捕获处理-setErrorHandler" class="headerlink" title="16、异常捕获处理 setErrorHandler"></a>16、异常捕获处理 setErrorHandler</h2><p>The exception could not be delivered to the consumer because it has already canceled/disposed the flow or the exception has nowhere to go to begin with</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">解决方案<span class="number">1</span>：在 Application 初始化时候设置 RxJavaPlugin 的 ErrorHandler。RxJava2的一个重要的设计理念是：不吃掉任何一个异常。产生的问题是，当RxJava2“downStream”取消订阅后，“upStream”仍有可能抛出异常，这时由于已经取消订阅，“downStream”无法处理异常，此时的异常无人处理，便会导致程序崩溃。</span><br><span class="line"></span><br><span class="line">RxJavaPlugins.setErrorHandler(<span class="keyword">new</span> Consumer() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(Throwable throwable)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(“err:” + throwable.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原文链接：https://blog.csdn.net/qq_36017059/article/details/110140369</span></span><br></pre></td></tr></table></figure><h2 id="17、取消订阅"><a href="#17、取消订阅" class="headerlink" title="17、取消订阅"></a>17、取消订阅</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Observable : doOnUnsubscribe -&gt;  doOnDispose</span><br><span class="line">    </span><br><span class="line">Flowable:     doOnDispose   -&gt;   doOnCancel</span><br></pre></td></tr></table></figure><h2 id="18、背压替换使用-Flowable"><a href="#18、背压替换使用-Flowable" class="headerlink" title="18、背压替换使用 Flowable"></a>18、背压替换使用 Flowable</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用到.onBackpressureDrop() ，onBackpressureBuffer 函数，请替换 Observable为 Flowable。 专门用于处理背压。</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Android/">Android</category>
      
      
      <category domain="http://example.com/tags/Rxjava/">Rxjava</category>
      
      
      <comments>http://example.com/2021/12/23/Rxjava1-x-%E5%8D%87%E7%BA%A7%E5%88%B0-Rxjava2-x-%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>tmux入门指南</title>
      <link>http://example.com/2021/11/25/tmux%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <guid>http://example.com/2021/11/25/tmux%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <pubDate>Thu, 25 Nov 2021 12:20:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;tmux是一个 terminal multiplexer（终端复用器），它可以启动一系列终端会话。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>tmux是一个 terminal multiplexer（终端复用器），它可以启动一系列终端会话。</p><span id="more"></span> <p>我们使用命令行时，打开一个终端窗口，会话开始，执行某些命令如npm run dev，关闭此终端窗口会话结束，npm run dev服务会话随之被关闭。有时我们希望运行服务或者一些cd命令等被保留，而不是关闭窗口再打开后，重新手动执行。tmux的主要用途就在于此。</p><p>它解绑了会话和终端窗口。关闭终端窗口再打开会话并不终止，而是继续在执行。将会话与终端窗后彻底分离。</p><p><strong>优秀的shell分屏工具。</strong></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu 或 Debian</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install tmux</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CentOS 或 Fedora</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install tmux</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Mac</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install tmux</span></span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tmux new -s  &lt;session-name&gt; <span class="comment">#启动并命名</span></span></span><br></pre></td></tr></table></figure><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">exit</span> 或 ctrl+d</span></span><br></pre></td></tr></table></figure><h2 id="关闭当前终端"><a href="#关闭当前终端" class="headerlink" title="关闭当前终端"></a>关闭当前终端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">x</span><br></pre></td></tr></table></figure><h2 id="关闭整个终端"><a href="#关闭整个终端" class="headerlink" title="关闭整个终端"></a>关闭整个终端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure><h2 id="切换终端窗口"><a href="#切换终端窗口" class="headerlink" title="切换终端窗口"></a>切换终端窗口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">方向键 或者 o</span><br></pre></td></tr></table></figure><h2 id="切换到指定窗口"><a href="#切换到指定窗口" class="headerlink" title="切换到指定窗口"></a>切换到指定窗口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">q</span><br><span class="line">再按对应数字键</span><br></pre></td></tr></table></figure><h2 id="垂直分屏"><a href="#垂直分屏" class="headerlink" title="垂直分屏"></a>垂直分屏</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure><h2 id="水平分屏"><a href="#水平分屏" class="headerlink" title="水平分屏"></a>水平分屏</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line"><span class="meta">%</span></span><br></pre></td></tr></table></figure><h2 id="查看面板编号"><a href="#查看面板编号" class="headerlink" title="查看面板编号"></a>查看面板编号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式(ctrl+b)后,按</span></span><br><span class="line">q</span><br></pre></td></tr></table></figure><h2 id="全屏-恢复面板窗口"><a href="#全屏-恢复面板窗口" class="headerlink" title="全屏/恢复面板窗口"></a>全屏/恢复面板窗口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式(ctrl+b)后,按</span></span><br><span class="line">z</span><br></pre></td></tr></table></figure><h2 id="创建新窗口"><a href="#创建新窗口" class="headerlink" title="创建新窗口"></a>创建新窗口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式(ctrl+b)后,按</span></span><br><span class="line">c</span><br></pre></td></tr></table></figure><h2 id="查看会话列表"><a href="#查看会话列表" class="headerlink" title="查看会话列表"></a>查看会话列表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux ls</span></span><br><span class="line"></span><br><span class="line">6: 1 windows (created Thu Nov 25 21:05:26 2021)</span><br><span class="line">7: 1 windows (created Thu Nov 25 21:15:18 2021)</span><br><span class="line">8: 1 windows (created Thu Nov 25 21:15:32 2021)</span><br></pre></td></tr></table></figure><h2 id="进入会话"><a href="#进入会话" class="headerlink" title="进入会话"></a>进入会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux a -t &lt;session-name&gt;  <span class="comment">#从终端环境进入会话</span></span></span><br></pre></td></tr></table></figure><h2 id="离开会话"><a href="#离开会话" class="headerlink" title="离开会话"></a>离开会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux detach</span></span><br></pre></td></tr></table></figure><h2 id="销毁会话"><a href="#销毁会话" class="headerlink" title="销毁会话"></a>销毁会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux kill-session -t &lt;session-name&gt;</span></span><br></pre></td></tr></table></figure><h2 id="切换会话"><a href="#切换会话" class="headerlink" title="切换会话"></a>切换会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux switch -t &lt;session-name&gt;</span></span><br></pre></td></tr></table></figure><h2 id="重命名会话"><a href="#重命名会话" class="headerlink" title="重命名会话"></a>重命名会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tmux rename-session -t &lt;old-session-name&gt; &lt;new-session-name&gt;</span></span><br></pre></td></tr></table></figure><h2 id="滚动窗户内容"><a href="#滚动窗户内容" class="headerlink" title="滚动窗户内容"></a>滚动窗户内容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">PgUp PgDn 实现上下翻页</span><br><span class="line">键 q 退出</span><br></pre></td></tr></table></figure><h2 id="暂时退出当前会话"><a href="#暂时退出当前会话" class="headerlink" title="暂时退出当前会话"></a>暂时退出当前会话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">d</span><br></pre></td></tr></table></figure><h2 id="终端内显示时间"><a href="#终端内显示时间" class="headerlink" title="终端内显示时间"></a><strong>终端内显示时间</strong></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动命令模式后(ctrl+b)，按</span></span><br><span class="line">t</span><br></pre></td></tr></table></figure><p>感谢：</p><p><a href="https://zhuanlan.zhihu.com/p/98384704">https://zhuanlan.zhihu.com/p/98384704</a></p><p><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">https://www.ruanyifeng.com/blog/2019/10/tmux.html</a></p><p><a href="https://www.cnblogs.com/longbigbeard/p/9513491.html">https://www.cnblogs.com/longbigbeard/p/9513491.html</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/tmux/">tmux</category>
      
      
      <category domain="http://example.com/tags/tmux/">tmux</category>
      
      
      <comments>http://example.com/2021/11/25/tmux%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>技术-简称</title>
      <link>http://example.com/2021/08/19/%E6%8A%80%E6%9C%AF-%E7%AE%80%E7%A7%B0/</link>
      <guid>http://example.com/2021/08/19/%E6%8A%80%E6%9C%AF-%E7%AE%80%E7%A7%B0/</guid>
      <pubDate>Thu, 19 Aug 2021 07:46:30 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;Android-APT&quot;&gt;&lt;a href=&quot;#Android-APT&quot; class=&quot;headerlink&quot; title=&quot;Android APT&quot;&gt;&lt;/a&gt;Android APT&lt;/h1&gt;&lt;p&gt;Android annotation process tool 是一种处理注释的工具，它对源代码文件进行检测找出其中的Annotation，使用Annotation进行额外的处理。基于 Java生成代码，利于注解生成新的文件，有一定的侵入性。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="Android-APT"><a href="#Android-APT" class="headerlink" title="Android APT"></a>Android APT</h1><p>Android annotation process tool 是一种处理注释的工具，它对源代码文件进行检测找出其中的Annotation，使用Annotation进行额外的处理。基于 Java生成代码，利于注解生成新的文件，有一定的侵入性。</p><span id="more"></span><p><strong>APT的处理要素：</strong></p><p>注解处理器（AbstractProcess）+代码处理（javaPoet）+处理器注册（AutoService）+apt</p><p><strong>APT处理annotation的流程：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 定义注解（如<span class="meta">@automain</span>）</span><br><span class="line"><span class="number">2.</span> 定义注解处理器</span><br><span class="line"><span class="number">3.</span> 在处理器里面完成处理方式，通常是生成java代码。</span><br><span class="line"><span class="number">4.</span> 注册处理器</span><br></pre></td></tr></table></figure><p> 优秀讲解：<a href="https://juejin.cn/post/6844903923233341453">https://juejin.cn/post/6844903923233341453</a></p><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1><p>AOP是Aspect Oriented Programming的缩写，即『面向切面编程』。它和OOP都是编程的不同思想，OOP即『面向对象编程』，它提倡的是将功能模块化，对象化，而AOP的思想，它提倡的是针对同一类问题的统一处理，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。</p><p>常用技术：Aspectj ， ASM</p><h1 id="ASM"><a href="#ASM" class="headerlink" title="ASM"></a>ASM</h1><p><a href="https://asm.ow2.io/">ASM</a>是一个通用的Java字节码操作和分析框架。 它可以用于修改现有类或直接以二进制形式动态生成类。 ASM提供了一些常见的字节码转换和分析算法，可以从中构建自定义复杂转换和代码分析工具。ASM提供与其他Java字节码框架类似的功能，但专注于性能。 因为它的设计和实现尽可能小而且快，所以它非常适合在动态系统中使用。</p><p><strong>核心类：</strong></p><p>① ClassReader:该类用来解析编译过的class字节码文件。</p><p>② ClassWriter:该类用来重新构建编译后的类，比如说修改类名、属性以及方法，甚至可以生成新的类的字节码文件。</p><p>③ ClassAdapter:该类也实现了ClassVisitor接口，它将对它的方法调用委托给另一个ClassVisitor对象。</p><h1 id="AspectJ"><a href="#AspectJ" class="headerlink" title="AspectJ"></a>AspectJ</h1><p> AspectJ 通过注解的形式来标注切入点、切入对象等，然后在代码编译期间将代码织入到java的字节码中。</p><h1 id="CI"><a href="#CI" class="headerlink" title="CI"></a>CI</h1><p>Continuous Integration，即“持续集成”</p><p>CICD 是持续集成（Continuous Integration）、持续交付（Continuous Delivery）与持续部署（Continuous Deployment）的简称。指在开发过程中自动执行一系列脚本来减低开发引入 bug 的概率，在新代码从开发到部署的过程中，尽量减少人工的介入。</p><h1 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h1><p>Inversion of Control，即“控制反转”，它是一种设计思想，并不是什么技术；在 Java 中，IOC 意味着将我们设计好的对象交给容器控制，而不是传统的需要时在内部构造直接控制；</p><p><strong>谁控制谁？控制了什么？</strong></p><ul><li><strong>谁控制了谁：</strong> IoC 控制了对象；</li><li><strong>控制了什么：</strong> 主要控制了外部资源的获取，不仅限于对象，包括文件等资源；</li></ul><p><strong>什么为正转？什么为反转？</strong></p><ul><li><strong>正转：</strong> 在我们需要某个对象的时候，<strong>需要自己主动的去构建对象以及其所依赖的对象；</strong></li><li><strong>反转：</strong> 在我们需要某个对象的时候，<strong>只需要在 IoC 容器中获取所需对象，无需关心创建过程以及其中的依赖对象；全盘由 IoC 容器帮我们创建对象以及注入其所依赖的对象，在这里我们把对象的控制权反转给了 IoC 容器，所以称为反转；</strong></li></ul><h1 id="DI"><a href="#DI" class="headerlink" title="DI"></a>DI</h1><p>Dependency Injection，即”依赖注入”，就是由容器动态的将某个依赖注入到组件中。通过依赖注入机制，我们只需要简单的配置，无需任何代码就可以指定目标所需要的资源，从而完成自身的业务逻辑；我们无需关心具体的资源来自何处，提升了系统灵活性和可扩展性。</p><p>DI 可以看作是 IoC 的一种实现方式，IoC 是一种思想，而 DI 是一种设计模式，是一种实现 IoC 的模式。</p><p><strong>依赖注入的三种方式</strong></p><ol><li><strong>构造方法注入：</strong> 被注入的对象可以通过在其构造方法中声明参数列表，让 IoC 容器知道它需要依赖哪些对象</li><li><strong>setter 注入：</strong> 为其需要依赖的对象增加 setter 方法，可以通过 setter 方法将其依赖的对象注入到对象中</li><li><strong>接口注入：</strong> 对于接口注入来说，如果被注入对象想要 IoC 容器为其注入依赖对象，就必须实现某个接口，这个接口提供了一个方法，用来为其注入依赖对象。但是从注入方式的使用来说，接口注入是现在不提倡的一种方式，基本处于”退役”状态，因为它强制被注入实现对象不必要的依赖。</li></ol><h1 id="SPI"><a href="#SPI" class="headerlink" title="SPI"></a>SPI</h1><p>SPI ，全称为 Service Provider Interface，是一种服务发现机制。它通过在ClassPath路径下的META-INF/services文件夹查找文件，自动加载文件里所定义的类。</p><p>这一机制为很多框架扩展提供了可能，比如在Dubbo、JDBC中都使用到了SPI机制。</p><h1 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h1><p>在传统的系统部署中，服务运行在一个固定的已知的 IP 和端口上，如果一个服务需要调用另外一个服务，可以通过地址直接调用，但是，在虚拟化或容器话的环境中，服务实例的启动和销毁是很频繁的，服务地址在动态的变化，如果需要将请求发送到动态变化的服务实例上，至少需要两个步骤：</p><p>服务注册 — 存储服务的主机和端口信息</p><p>服务发现 — 允许其他用户发现服务注册阶段存储的信息</p><p>服务发现的主要优点是可以无需了解架构的部署拓扑环境，只通过服务的名字就能够使用服务，提供了一种服务发布与查找的协调机制。服务发现除了提供服务注册、目录和查找三大关键特性，还需要能够提供健康监控、多种查询、实时更新和高可用性等。</p><p><strong>对于移动客户端来说</strong>，服务发现用于模块间解耦，通过接口或者特定注解标识，获取对应的实现类</p><p>感谢：</p><p><a href="https://juejin.cn/post/6844904162992357383">https://juejin.cn/post/6844904162992357383</a></p><p><a href="https://juejin.cn/post/7031042407504281630">https://juejin.cn/post/7031042407504281630</a></p><p><a href="https://www.jianshu.com/p/3a3edbcd8f24">https://www.jianshu.com/p/3a3edbcd8f24</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Android/">Android</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/java/">java</category>
      
      
    </item>
    
    <item>
      <title>Android Gradle Plugin 入门</title>
      <link>http://example.com/2021/08/08/Android-Gradle-Plugin-%E5%85%A5%E9%97%A8/</link>
      <guid>http://example.com/2021/08/08/Android-Gradle-Plugin-%E5%85%A5%E9%97%A8/</guid>
      <pubDate>Sun, 08 Aug 2021 13:10:37 GMT</pubDate>
      
      <description>&lt;p&gt;Android Gradle Plugin 简称 AGP，目前不少公司使用，来完成一些自动化功能。利用提供的 Transform API 来完成字节码插桩。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Android Gradle Plugin 简称 AGP，目前不少公司使用，来完成一些自动化功能。利用提供的 Transform API 来完成字节码插桩。</p><span id="more"></span><h1 id="Gradle插件开发"><a href="#Gradle插件开发" class="headerlink" title="Gradle插件开发"></a>Gradle插件开发</h1><table><thead><tr><th align="center">方式</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">build script 脚本</td><td align="left">把插件 写在 build.gradle文件中，一般用于简单的逻辑，只对该build.gradle可见</td></tr><tr><td align="center">buildSrc 目录</td><td align="left">将插件源码放在目录buildSrc/src/main/ 中，只对该项目可见</td></tr><tr><td align="center">独立项目</td><td align="left">独立的java项目/模块，可以将文件包发布到仓库（Jcenter、MavenCenter），方便其他项目引入使用</td></tr></tbody></table><h2 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h2><p>实例：获取git-commit，在app的build.gradle文件中定义</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取 short git-commit  i</span></span><br><span class="line"><span class="keyword">def</span> gitSha() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String gitRev = <span class="string">&#x27;git rev-parse --short HEAD&#x27;</span>.execute(<span class="literal">null</span>,project.rootDir)</span><br><span class="line">        .text.trim()</span><br><span class="line">        <span class="keyword">if</span> (gitRev == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">&quot;can&#x27;t get git rev, you should&#x27;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gitRev</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">&quot;can&#x27;t get git rev, you should add ...&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h2><p>1、在项目的根目录下创建<code>buildSrc</code>目录，这个名字不能错，必须是<code>buildSrc</code>。创建完之后，rebuild一下工程，会在buildSrc下自动生成一些目录。（网上截图）</p><p><img src="/2021/08/08/Android-Gradle-Plugin-%E5%85%A5%E9%97%A8/202003151113054.png" alt="在这里插入图片描述"></p><p>2、在buildSrc目录下创建<code>build.gradle</code>文件，并编写代码</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//use java library</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;java-library&#x27;</span></span><br><span class="line"></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main&#123;</span><br><span class="line"><span class="comment">//      groovy&#123;</span></span><br><span class="line"><span class="comment">//            srcDir &#x27;src/main/groovy&#x27;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        java&#123;</span><br><span class="line">            srcDir <span class="string">&#x27;src/main/java&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir <span class="string">&#x27;src/main/resources&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置说明：</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;java-library&#x27;</span> <span class="comment">//使用java来编写插件就引入java库</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;groovy&#x27;</span>   <span class="comment">//使用groovy来编写插件就引入groovy库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//源码配置</span></span><br><span class="line">srcDir <span class="string">&#x27;src/main/java&#x27;</span>    <span class="comment">//如果使用java就配置</span></span><br><span class="line">srcDir <span class="string">&#x27;src/main/groovy&#x27;</span>， <span class="comment">//如果使用groovy就配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//资源配置</span></span><br><span class="line">srcDir <span class="string">&#x27;src/main/resources&#x27;</span></span><br></pre></td></tr></table></figure><p>3、在buildSrc目录下创建<code>src/main/java</code>目录，之后再创建插件的包名：<code>com.learn.plugin</code>，编写代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.learn.plugin;</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.Plugin;</span><br><span class="line"><span class="keyword">import</span> org.gradle.api.Project;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyPlugin</span> <span class="keyword">implements</span> <span class="title">Plugin</span>&lt;<span class="title">Project</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(Project project)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;&gt;&gt;&gt; 自定义插件 MyPlugin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 4、在buildSrc目录下创建src/main/resources目录，在resources目录下创建目录META-INF/gradle-plugins目录，最后在该目录下编写插件属性文件com.learn.plugin.properties文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">/**</span></span><br><span class="line"> <span class="attr">*属性文件的命名规则是：</span></span><br><span class="line"> <span class="attr">*名称是创建的插件的包名，然后以.properties后缀结尾</span></span><br><span class="line"> <span class="attr">*文件中的implementation-class用来指定插件实现类。</span></span><br><span class="line"> <span class="meta">*文件名就是插件名，即在宿主中使用插件时的apply</span> <span class="string">plugin 后的参数</span></span><br><span class="line"> <span class="attr">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">implementation-class</span>=<span class="string">com.learn.plugin.MyPlugin</span></span><br></pre></td></tr></table></figure><p>5、使用插件,  在app模块下的build.gradle中引入插件：</p><p><code>apply plugin: &#39;com.learn.plugin</code>，这里引入的插件名就是插件的包名。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;com.learn.plugin&#x27;</span> <span class="comment">//引用自定义的插件</span></span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>6、测试插件<br>点击Android studio右上角的 sync按钮或者build项目，观察输入台：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:compileJava UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:compileGroovy NO-SOURCE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:processResources UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:classes UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:jar UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:assemble UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:compileTestJava NO-SOURCE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:compileTestGroovy NO-SOURCE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:processTestResources NO-SOURCE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:check UP-TO-DATE</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Task :buildSrc:build UP-TO-DATE</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Configure project :app</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; 自定义插件 MyPlugin==========</span></span><br></pre></td></tr></table></figure><h2 id="方式三："><a href="#方式三：" class="headerlink" title="方式三："></a>方式三：</h2><p> 在当前项目下，创建一个module选中 Java Library，命名为 Plugin（module名称随意）</p><p>1、在module的src/main/java下创建 自己的包名，以及插件类</p><p><img src="/2021/08/08/Android-Gradle-Plugin-%E5%85%A5%E9%97%A8/image-20210804230453329.png" alt="image-20210804230453329"></p><p>2、添加gradle Sdk的依赖，因为要使用gradle的API</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(<span class="attr">dir:</span> <span class="string">&#x27;libs&#x27;</span>, <span class="attr">include:</span> [<span class="string">&#x27;*.jar&#x27;</span>])</span><br><span class="line">    implementation gradleApi() <span class="comment">//依赖 gradle sdk</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//依赖Android的gradle插件，使用他的api获取编译完成的apk信息</span></span><br><span class="line">    implementation <span class="string">&quot;com.android.tools.build:gradle:3.5.4&quot;</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、在上面创建的包下，创建java类 编写插件代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JiaguPlugin</span> <span class="keyword">implements</span> <span class="title">Plugin</span>&lt;<span class="title">Project</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(Project project)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建 插件扩展，用来配置一些信息</span></span><br><span class="line">        ProcessLiveExt liveExt = project.getExtensions().create(<span class="string">&quot;live&quot;</span>, ProcessLiveExt.class);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//在gradle分析完build.gradle文件之后，回调。 此时才能获取到配置的信息</span></span><br><span class="line">        project.afterEvaluate(<span class="keyword">new</span> Action&lt;Project&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Project project)</span> </span>&#123;</span><br><span class="line">                String username = jiaguExt.getUsername();</span><br><span class="line">                String password = jiaguExt.getPassword();</span><br><span class="line">             </span><br><span class="line">                <span class="comment">//创建任务名，再侧边栏gradle下会显示出来.</span></span><br><span class="line">                 <span class="comment">//当点击gralde里的processLive任务时，会执行ProcessLiveTask里的代码</span></span><br><span class="line">                project.getTasks().create(<span class="string">&quot;processLive&quot;</span> , ProcessLiveTask.class, <span class="string">&quot;processLive&quot;</span>, liveExt);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上面的字符串“jiagu”就是在 build.gralde文件中，定义的节点配置名</span></span><br><span class="line">live &#123;</span><br><span class="line">    username <span class="string">&#x27;hanyaping&#x27;</span></span><br><span class="line">    password <span class="string">&#x27;372186554&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessLiveTask</span> <span class="keyword">extends</span> <span class="title">DefaultTask</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProcessLiveTask</span><span class="params">(String tag, ProcessLiveExt ext)</span> </span>&#123;</span><br><span class="line">        setGroup(<span class="string">&quot;brooks&quot;</span>);<span class="comment">//创建目录，把自定义任务放到同一个分组中</span></span><br><span class="line">        System.out.println(<span class="string">&quot;tag&quot;</span> + tag + <span class="string">&quot; &quot;</span> + ext);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//点击侧边栏gradle里的processLive任务会执行这个方法 【TaskAction注解，就是调用入口】</span></span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        getProject().exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(ExecSpec execSpec)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//执行 jar命令</span></span><br><span class="line">                System.out.println(<span class="string">&quot;===========开始Live=================&quot;</span>);</span><br><span class="line">                execSpec.commandLine(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;ls ./&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后续和 方式二 类同。</p><p>感谢：</p><p><a href="https://blog.csdn.net/u010982507/article/details/104875115">https://blog.csdn.net/u010982507/article/details/104875115</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Gradle/">Gradle</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/Gradle/">Gradle</category>
      
      <category domain="http://example.com/tags/Plugin/">Plugin</category>
      
      
    </item>
    
    <item>
      <title>Android Gradle 常用命令</title>
      <link>http://example.com/2021/08/06/Android-Gradle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <guid>http://example.com/2021/08/06/Android-Gradle-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <pubDate>Fri, 06 Aug 2021 08:20:03 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;1、Gradle-查询命令&quot;&gt;&lt;a href=&quot;#1、Gradle-查询命令&quot; class=&quot;headerlink&quot; title=&quot;1、Gradle 查询命令&quot;&gt;&lt;/a&gt;1、Gradle 查询命令&lt;/h2&gt;&lt;h3 id=&quot;1）查看主要任务&quot;&gt;&lt;a href=&quot;#1）查看主要任务&quot; class=&quot;headerlink&quot; title=&quot;1）查看主要任务&quot;&gt;&lt;/a&gt;1）查看主要任务&lt;/h3&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./gradlew tasks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="1、Gradle-查询命令"><a href="#1、Gradle-查询命令" class="headerlink" title="1、Gradle 查询命令"></a>1、Gradle 查询命令</h2><h3 id="1）查看主要任务"><a href="#1）查看主要任务" class="headerlink" title="1）查看主要任务"></a>1）查看主要任务</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew tasks</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2）查看所有任务，包括缓存任务等"><a href="#2）查看所有任务，包括缓存任务等" class="headerlink" title="2）查看所有任务，包括缓存任务等"></a>2）查看所有任务，包括缓存任务等</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew tasks --all</span><br></pre></td></tr></table></figure><h3 id="3）获取项目列表"><a href="#3）获取项目列表" class="headerlink" title="3）获取项目列表"></a>3）获取项目列表</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">gradle -q projects</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Root project</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Root project <span class="string">&#x27;brooks_android&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:app&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:live&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:baseLibrary&#x27;</span></span><br><span class="line">|    \--- Project <span class="string">&#x27;:baseLibrary:javassist-aop-gradle&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:commonsdk&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:data&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:greendaogenerator&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:libs&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:livecommon&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:livepush&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:openlivesdk&#x27;</span></span><br><span class="line">+--- Project <span class="string">&#x27;:pullToRefreshLibrary&#x27;</span></span><br><span class="line">\--- Project <span class="string">&#x27;:views&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4）获取依赖列表"><a href="#4）获取依赖列表" class="headerlink" title="4）获取依赖列表"></a>4）获取依赖列表</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew <span class="attr">app:</span>dependencies </span><br></pre></td></tr></table></figure><h2 id="2、Gradle-构建命令"><a href="#2、Gradle-构建命令" class="headerlink" title="2、Gradle 构建命令"></a>2、Gradle 构建命令</h2><p>Gradle 提供了一系列的快速构建命令来替代 IDE 的可视化构建操作，如我们最常用的 clean、build 等等。</p><p>需要注意的是，build 命令会把 debug、release 环境的包都构建出来。</p><h3 id="1）查看构建版本"><a href="#1）查看构建版本" class="headerlink" title="1）查看构建版本"></a>1）查看构建版本</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew -v</span><br></pre></td></tr></table></figure><h3 id="2）清除-build-文件夹"><a href="#2）清除-build-文件夹" class="headerlink" title="2）清除 build 文件夹"></a>2）清除 build 文件夹</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean</span><br></pre></td></tr></table></figure><h3 id="3）检查依赖并编译打包"><a href="#3）检查依赖并编译打包" class="headerlink" title="3）检查依赖并编译打包"></a>3）检查依赖并编译打包</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build</span><br></pre></td></tr></table></figure><h3 id="4）编译并安装-debug-包"><a href="#4）编译并安装-debug-包" class="headerlink" title="4）编译并安装 debug 包"></a>4）编译并安装 debug 包</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew installDebug</span><br></pre></td></tr></table></figure><h3 id="5）编译并打印日志"><a href="#5）编译并打印日志" class="headerlink" title="5）编译并打印日志"></a>5）编译并打印日志</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build --info</span><br></pre></td></tr></table></figure><h3 id="6）编译并输出性能报告"><a href="#6）编译并输出性能报告" class="headerlink" title="6）编译并输出性能报告"></a>6）编译并输出性能报告</h3><p>性能报告一般在构建工程根目录build/reports/profile 下</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build --profile</span><br></pre></td></tr></table></figure><h3 id="7）调试模式构建并打印堆栈日志"><a href="#7）调试模式构建并打印堆栈日志" class="headerlink" title="7）调试模式构建并打印堆栈日志"></a>7）调试模式构建并打印堆栈日志</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build --info --debug --stacktrace</span><br></pre></td></tr></table></figure><h3 id="8）强制更新最新依赖，清除构建后再构建"><a href="#8）强制更新最新依赖，清除构建后再构建" class="headerlink" title="8）强制更新最新依赖，清除构建后再构建"></a>8）强制更新最新依赖，清除构建后再构建</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean build --refresh-dependencies</span><br></pre></td></tr></table></figure><h3 id="9）编译并打-Debug-包"><a href="#9）编译并打-Debug-包" class="headerlink" title="9）编译并打 Debug 包"></a>9）编译并打 Debug 包</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./gradlew assembleDebug</span><br><span class="line"></span><br><span class="line"># 简化版命令，取各个单词的首字母</span><br><span class="line">./gradlew aD</span><br></pre></td></tr></table></figure><h3 id="10）编译并打-Release-的包"><a href="#10）编译并打-Release-的包" class="headerlink" title="10）编译并打 Release 的包"></a>10）编译并打 Release 的包</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./gradlew assembleRelease</span><br><span class="line"></span><br><span class="line"> # 简化版命令，取各个单词的首字母</span><br><span class="line">./gradlew aR</span><br></pre></td></tr></table></figure><h3 id="11）对某个module-的某个任务-taskName-运行"><a href="#11）对某个module-的某个任务-taskName-运行" class="headerlink" title="11）对某个module  的某个任务[taskName] 运行"></a>11）对某个module  的某个任务[taskName] 运行</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="attr">gradlew :</span><span class="attr">moduleName:</span>taskName</span><br></pre></td></tr></table></figure><p>感谢：<br><a href="https://juejin.cn/post/6844904122492125198">https://juejin.cn/post/6844904122492125198</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Gradle/">Gradle</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/Gradle/">Gradle</category>
      
      
    </item>
    
    <item>
      <title>Android ADB 常用命令</title>
      <link>http://example.com/2021/07/20/Android-ADB-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <guid>http://example.com/2021/07/20/Android-ADB-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <pubDate>Tue, 20 Jul 2021 14:11:32 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;抓取系统log&quot;&gt;&lt;a href=&quot;#抓取系统log&quot; class=&quot;headerlink&quot; title=&quot;抓取系统log&quot;&gt;&lt;/a&gt;抓取系统log&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;手机拨号界面输入： &amp;#x27;*#*# 284 #*#*&amp;#x27; 	#小米手机支持&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;系统会自动提示：“正在生成bug报告，大概需要1分钟”,文件再sdcard下。包含bugreport内容&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="抓取系统log"><a href="#抓取系统log" class="headerlink" title="抓取系统log"></a>抓取系统log</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">手机拨号界面输入： &#x27;*#*# 284 #*#*&#x27; #小米手机支持</span><br></pre></td></tr></table></figure><p>系统会自动提示：“正在生成bug报告，大概需要1分钟”,文件再sdcard下。包含bugreport内容</p><span id="more"></span><h2 id="错误报告获取"><a href="#错误报告获取" class="headerlink" title="错误报告获取"></a>错误报告获取</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb bugreport &lt;parh&gt;   #导出到指定路径</span><br></pre></td></tr></table></figure><p>导出后是一个zip文件，包含data/anr信息</p><h1 id="获取设备信息"><a href="#获取设备信息" class="headerlink" title="获取设备信息"></a>获取设备信息</h1><h2 id="查询手机发货地址"><a href="#查询手机发货地址" class="headerlink" title="查询手机发货地址"></a>查询手机发货地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.hw.country  #查询手机发货地址</span><br></pre></td></tr></table></figure><h2 id="查询CPU位数"><a href="#查询CPU位数" class="headerlink" title="查询CPU位数"></a>查询CPU位数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.cpu.abi  #查询CPU是32位还是64位</span><br></pre></td></tr></table></figure><h2 id="查询EMUI版本"><a href="#查询EMUI版本" class="headerlink" title="查询EMUI版本"></a>查询EMUI版本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.build.version.emui #查询EMUI版本</span><br></pre></td></tr></table></figure><h2 id="查询设备制造商"><a href="#查询设备制造商" class="headerlink" title="查询设备制造商"></a>查询设备制造商</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.manufacturer#查询设备制造商</span><br></pre></td></tr></table></figure><h2 id="查询手机品牌"><a href="#查询手机品牌" class="headerlink" title="查询手机品牌"></a>查询手机品牌</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.brand#查询手机品牌</span><br></pre></td></tr></table></figure><h2 id="查询手机内部代号"><a href="#查询手机内部代号" class="headerlink" title="查询手机内部代号"></a>查询手机内部代号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.model#查询手机内部代号</span><br></pre></td></tr></table></figure><h2 id="查询设备名称"><a href="#查询设备名称" class="headerlink" title="查询设备名称"></a>查询设备名称</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.name#查询设备名称</span><br></pre></td></tr></table></figure><h2 id="查询设备序列号"><a href="#查询设备序列号" class="headerlink" title="查询设备序列号"></a>查询设备序列号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.serialno#查询设备序列号</span><br></pre></td></tr></table></figure><h2 id="查询手机Android系统版本"><a href="#查询手机Android系统版本" class="headerlink" title="查询手机Android系统版本"></a>查询手机Android系统版本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.build.version.release #查询手机Android系统版本</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="显示当前栈顶Activity信息"><a href="#显示当前栈顶Activity信息" class="headerlink" title="显示当前栈顶Activity信息"></a>显示当前栈顶Activity信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity top</span><br></pre></td></tr></table></figure><h2 id="显示当前Activity调用栈信息"><a href="#显示当前Activity调用栈信息" class="headerlink" title="显示当前Activity调用栈信息"></a>显示当前Activity调用栈信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity activities</span><br></pre></td></tr></table></figure><h2 id="当前与用户交互的activity"><a href="#当前与用户交互的activity" class="headerlink" title="当前与用户交互的activity"></a>当前与用户交互的activity</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">方法一</span></span><br><span class="line">adb shell dumpsys activity activities | sed -En -e &#x27;/Running activities/,/Run #0/p&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">方法二</span></span><br><span class="line">adb shell dumpsys activity | grep -i run</span><br></pre></td></tr></table></figure><h2 id="显示已安装应用列表"><a href="#显示已安装应用列表" class="headerlink" title="显示已安装应用列表"></a>显示已安装应用列表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm list package ｜ grep live</span><br></pre></td></tr></table></figure><h2 id="显示包详情信息"><a href="#显示包详情信息" class="headerlink" title="显示包详情信息"></a>显示包详情信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys package &lt;packagename&gt;#adb shell dumpsys package com.brooks.live</span><br></pre></td></tr></table></figure><h2 id="显示app内部目录"><a href="#显示app内部目录" class="headerlink" title="显示app内部目录"></a>显示app内部目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">adb shell run-as &lt;package&gt; ls</span><br><span class="line"></span><br><span class="line">app_libs</span><br><span class="line">app_textures</span><br><span class="line">app_webview</span><br><span class="line">cache</span><br><span class="line">databases</span><br><span class="line">files</span><br><span class="line">lib</span><br><span class="line">lib-main</span><br><span class="line">shared_prefs</span><br></pre></td></tr></table></figure><h2 id="文件导入导出"><a href="#文件导入导出" class="headerlink" title="文件导入导出"></a>文件导入导出</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adb push [path] [device path]   #导入</span><br><span class="line">adb pull [device path] [path]#导出</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> adb push ~/work/test.log  /sdcard</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> adb pull /sdcard/tracker.txt ~/work</span></span><br></pre></td></tr></table></figure><h2 id="Monkey-压力测试"><a href="#Monkey-压力测试" class="headerlink" title="Monkey 压力测试"></a>Monkey 压力测试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb shell monkey -p &lt;packagename&gt; -s 200 --throttle 50 --monitor-native-crashes -v -v 5000</span><br><span class="line"></span><br><span class="line">adb shell monkey -p &lt;packagename&gt; -s 500 --ignore-crashes --ignore-timeouts --monitor-native-crashes -v -v 10000 &gt;  ./java_monkey_log.txt   </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="生成签名"><a href="#生成签名" class="headerlink" title="生成签名"></a>生成签名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cmd：生成签名：</span></span><br><span class="line">keytool -genkey -alias android.keystore -keyalg RSA -validity 20000 -keystore android.keystore </span><br></pre></td></tr></table></figure><h2 id="标准hprof-conv文件转换"><a href="#标准hprof-conv文件转换" class="headerlink" title="标准hprof-conv文件转换"></a>标准hprof-conv文件转换</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Android studio 转换 hprof-conv文件</span></span><br><span class="line">hprof-conv.exe com.brooks.car.hprof convert.hprof</span><br></pre></td></tr></table></figure><h2 id="设备总内存获取"><a href="#设备总内存获取" class="headerlink" title="设备总内存获取"></a>设备总内存获取</h2><p>内存不足时：会出现异常，卡顿、触发LMK杀死应用,【IO流 读取 /proc/meminfo文件信息 第一行就是】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat proc/meminfo</span>      </span><br><span class="line">MemTotal:        1530888 kB</span><br><span class="line">MemFree:          292248 kB</span><br><span class="line">MemAvailable:     614972 kB</span><br><span class="line">Buffers:            4192 kB</span><br><span class="line">Cached:           368056 kB</span><br><span class="line">SwapCached:            0 kB</span><br><span class="line">Active:           885152 kB</span><br></pre></td></tr></table></figure><h2 id="获取App-进程内存信息"><a href="#获取App-进程内存信息" class="headerlink" title="获取App 进程内存信息"></a>获取App 进程内存信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys meminfo &lt;pid&gt; #输出指定pid的某一进程</span><br><span class="line">adb shell dumpsys meminfo --package &lt;packagename&gt; #输出指定包名的进程，可能包含多个进程</span><br></pre></td></tr></table></figure><h1 id="adb-Logcat"><a href="#adb-Logcat" class="headerlink" title="adb Logcat"></a>adb Logcat</h1><h2 id="查看webview-log"><a href="#查看webview-log" class="headerlink" title="查看webview log"></a>查看webview log</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -s chromium</span><br></pre></td></tr></table></figure><h2 id="导出Log"><a href="#导出Log" class="headerlink" title="导出Log"></a>导出Log</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -s *:V &gt; ./live.log #全量log</span><br><span class="line">adb logcat -s *:E &gt; ./live.log #Error级别log</span><br><span class="line">adb logcat -s *:F &gt; ./live.log #Fatal级别log</span><br></pre></td></tr></table></figure><h2 id="过滤Log"><a href="#过滤Log" class="headerlink" title="过滤Log"></a>过滤Log</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb logcat | grep PK</span><br><span class="line">adb logcat | grep -i PK  #忽略大小写</span><br></pre></td></tr></table></figure><h2 id="adb无线调试"><a href="#adb无线调试" class="headerlink" title="adb无线调试"></a>adb无线调试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">adb connect &lt;手机ip&gt;:5555  <span class="comment">#只要手机不重启，后面就可以不用usb线连接手机了，直接通过网络adb就可以</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果重复以上步骤还是Offline的话，使用USB 线将设备与电脑连接。应确保连接成功（可运行 adb devices 看是否能列出该设备）。让设备在 5555 端口监听 TCP/IP 连接，PC端命令行输入：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb tcpip 5555</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">断开连接</span></span><br><span class="line">adb disconnect &lt;手机ip&gt;:5555</span><br></pre></td></tr></table></figure><h1 id="adb-启动"><a href="#adb-启动" class="headerlink" title="adb 启动"></a>adb 启动</h1><h2 id="启动activity"><a href="#启动activity" class="headerlink" title="启动activity"></a>启动activity</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -n ｛package｝/｛全类名activity&#125;</span><br><span class="line">adb shell am start -a  &#123; Action名称 &#125;  -d  &#123;参数&#125;</span><br></pre></td></tr></table></figure><h2 id="启动浏览器"><a href="#启动浏览器" class="headerlink" title="启动浏览器"></a>启动浏览器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -n com.android.browser/com.android.browser.BrowserActivity  #启动浏览器</span><br><span class="line">adb shell am start -a android.intent.action.VIEW -d http://www.baidu.com    #启动浏览器并打开指定网页</span><br></pre></td></tr></table></figure><h2 id="启动-Camera"><a href="#启动-Camera" class="headerlink" title="启动 Camera"></a>启动 Camera</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -n com.android.camera/com.android.camera.Camera</span><br></pre></td></tr></table></figure><h2 id="拨打电话"><a href="#拨打电话" class="headerlink" title="拨打电话"></a>拨打电话</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell  am start -a  android.intent.action.CALL -d tel:10086</span><br></pre></td></tr></table></figure><h2 id="启动-google-map-直接定位到北京"><a href="#启动-google-map-直接定位到北京" class="headerlink" title="启动 google map 直接定位到北京"></a>启动 google map 直接定位到北京</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -a android.intent.action.VIEW geo:0,0?q=beijing</span><br></pre></td></tr></table></figure><h2 id="启动activity通过scheme"><a href="#启动activity通过scheme" class="headerlink" title="启动activity通过scheme"></a>启动activity通过scheme</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -d  autocat://findcar</span><br></pre></td></tr></table></figure><h2 id="关闭activity"><a href="#关闭activity" class="headerlink" title="关闭activity"></a>关闭activity</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb shell am force-stop ｛package｝</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如：关闭浏览器</span></span><br><span class="line">adb shell am force-stop com.android.browser</span><br></pre></td></tr></table></figure><h2 id="启动service"><a href="#启动service" class="headerlink" title="启动service"></a>启动service</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb shell am startservice -n ｛包名｝/｛包名｝.&#123;服务名&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如：启动自己应用中一个service</span></span><br><span class="line">adb shell am startservice -n com.android.traffic/com.android.traffic.maniservice</span><br></pre></td></tr></table></figure><h2 id="卸载应用程序："><a href="#卸载应用程序：" class="headerlink" title="卸载应用程序："></a>卸载应用程序：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb uninstall｛package｝</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如：卸载浏览器</span></span><br><span class="line">adb uninstall com.android.browser</span><br></pre></td></tr></table></figure><h2 id="发送broadcast："><a href="#发送broadcast：" class="headerlink" title="发送broadcast："></a>发送broadcast：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb shell am broadcast -a &lt;广播动作&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如：发送一个网络变化的广播</span></span><br><span class="line">adb shell am broadcast -a android.net.conn.CONNECTIVITY_CHANGE</span><br></pre></td></tr></table></figure><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb shell am broadcast -a NotifyServiceStop</span><br><span class="line">adb forward tcp:12580 tcp:10086</span><br><span class="line">adb shell am broadcast -a NotifyServiceStart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 111 &gt; a.txt  （向 aa.txt写入 “111”） 只第一行用&quot;&gt;&quot; ，换行用&quot;&gt;&gt;&quot;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Android/">Android</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/ADB/">ADB</category>
      
      
      <comments>http://example.com/2021/07/20/Android-ADB-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Git 常用命令</title>
      <link>http://example.com/2021/07/18/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <guid>http://example.com/2021/07/18/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <pubDate>Sun, 18 Jul 2021 06:30:04 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;h2 id=&quot;SSH&quot;&gt;&lt;a href=&quot;#SSH&quot; class=&quot;headerlink&quot; title=&quot;SSH&quot;&gt;&lt;/a&gt;SSH&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;一轮回车到底，在用户目录下 .ssh文件夹下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&amp;quot;hyp.712@163.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;查看sh公钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; cat ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">一轮回车到底，在用户目录下 .ssh文件夹下</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">&quot;hyp.712@163.com&quot;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">查看sh公钥</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat ~/.ssh/id_rsa.pub</span></span><br></pre></td></tr></table></figure><span id="more"></span> <h2 id="查看全部配置"><a href="#查看全部配置" class="headerlink" title="查看全部配置"></a>查看全部配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config -l</span></span><br><span class="line"></span><br><span class="line">user.name=brooks</span><br><span class="line">user.email=hyp.712@163.com</span><br><span class="line">color.ui=auto</span><br><span class="line">http.postbuffer=524288000</span><br><span class="line">core.repositoryformatversion=0</span><br><span class="line">core.filemode=true</span><br><span class="line">core.bare=false</span><br><span class="line">core.logallrefupdates=true</span><br><span class="line">remote.origin.url=git@xxx.git</span><br><span class="line">remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*</span><br><span class="line">branch.master.remote=origin</span><br><span class="line">branch.master.merge=refs/heads/master</span><br></pre></td></tr></table></figure><h2 id="查看用户配置"><a href="#查看用户配置" class="headerlink" title="查看用户配置"></a>查看用户配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global -l</span></span><br><span class="line"></span><br><span class="line">user.name=brooks</span><br><span class="line">user.email=hyp.712@163.com</span><br><span class="line">color.ui=auto</span><br><span class="line">http.postbuffer=524288000</span><br></pre></td></tr></table></figure><h2 id="修改用户配置"><a href="#修改用户配置" class="headerlink" title="修改用户配置"></a>修改用户配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">  git config --global user.name <span class="string">&quot;输入你的用户名&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">  git config --global user.email <span class="string">&quot;输入你的邮箱&quot;</span></span></span><br></pre></td></tr></table></figure><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mkdir demo</span><br><span class="line">cd demo</span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">touch README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">添加仓库地址</span></span><br><span class="line">git remote add xxx.git #项目地址</span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">已有仓库</span></span><br><span class="line">cd existing_git_repo</span><br><span class="line">git remote add origin xxx.git #项目地址</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="查看远程仓库地址"><a href="#查看远程仓库地址" class="headerlink" title="查看远程仓库地址"></a>查看远程仓库地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git remote -v</span></span><br></pre></td></tr></table></figure><h2 id="添加新的远程仓库"><a href="#添加新的远程仓库" class="headerlink" title="添加新的远程仓库"></a>添加新的远程仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git remote add &lt;remote&gt; &lt;url&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修改远程仓库地址"><a href="#修改远程仓库地址" class="headerlink" title="修改远程仓库地址"></a>修改远程仓库地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">方法一：直接修改</span></span><br><span class="line">git remote set-url origin [url]</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">方法二：先删除再修改地址</span></span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin [url]</span><br></pre></td></tr></table></figure><h2 id="显示远程仓库信息"><a href="#显示远程仓库信息" class="headerlink" title="显示远程仓库信息"></a>显示远程仓库信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git remote show &lt;remote&gt;</span></span><br></pre></td></tr></table></figure><h2 id="关联本地和远程仓库"><a href="#关联本地和远程仓库" class="headerlink" title="关联本地和远程仓库"></a>关联本地和远程仓库</h2><p>fatal: refusing to merge unrelated histories</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">解决方案：</span></span><br><span class="line">git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><h2 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>master 分支前的 * 字符，它表示当前所在的分支。</p><h2 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -r</span></span><br></pre></td></tr></table></figure><h2 id="列出所有分支（local-amp-remote）"><a href="#列出所有分支（local-amp-remote）" class="headerlink" title="列出所有分支（local&amp;remote）"></a>列出所有分支（local&amp;remote）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -a</span></span><br></pre></td></tr></table></figure><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout &lt;branch&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建并切换到新分支"><a href="#创建并切换到新分支" class="headerlink" title="创建并切换到新分支"></a>创建并切换到新分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b &lt;branch&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基于当前分支创建新分支"><a href="#基于当前分支创建新分支" class="headerlink" title="基于当前分支创建新分支"></a>基于当前分支创建新分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch &lt;new-branch&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -d &lt;branch&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git push -d origin &lt;branch&gt;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push -d origin &lt;branch1&gt; &lt;branch2&gt; &lt;branch3&gt; <span class="comment">#删除多个分支</span></span></span><br></pre></td></tr></table></figure><h2 id="修改本地分支名称"><a href="#修改本地分支名称" class="headerlink" title="修改本地分支名称"></a>修改本地分支名称</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -m &lt;old-branch&gt; &lt;new-branch&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="修改远程分支名称"><a href="#修改远程分支名称" class="headerlink" title="修改远程分支名称"></a>修改远程分支名称</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">不能直接修改，步骤：</span></span><br><span class="line">1、修改本地分支</span><br><span class="line">2、删除远程分支</span><br><span class="line">3、将新分支推上去</span><br><span class="line">4、将新本地分支和远程相连</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -m &lt;old-branch&gt; &lt;new-branch&gt;</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> git push -d origin &lt;old-branch&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin &lt;new-branch&gt;</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> git push --set-upstream origin &lt;new-branch&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="查看仓库文件状态"><a href="#查看仓库文件状态" class="headerlink" title="查看仓库文件状态"></a>查看仓库文件状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git status</span></span><br></pre></td></tr></table></figure><h2 id="查看未暂存文件变化"><a href="#查看未暂存文件变化" class="headerlink" title="查看未暂存文件变化"></a>查看未暂存文件变化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git diff     <span class="comment">#查看未暂存 所有文件的变更</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff &lt;path&gt;  <span class="comment">#查看未暂存 指定文件的变更</span></span></span><br></pre></td></tr></table></figure><h2 id="查看已暂存文件变化"><a href="#查看已暂存文件变化" class="headerlink" title="查看已暂存文件变化"></a>查看已暂存文件变化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git diff --cached   <span class="comment">#查看已暂存 所有文件的变更</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff --cached &lt;path&gt;  <span class="comment">#查看已暂存 指定文件的变更</span></span></span><br></pre></td></tr></table></figure><h2 id="添加暂存"><a href="#添加暂存" class="headerlink" title="添加暂存"></a>添加暂存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add .   <span class="comment">#暂存所有 修改的文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add &lt;path&gt;  <span class="comment">#暂存指定 修改的文件</span></span></span><br></pre></td></tr></table></figure><h2 id="添加部分暂存"><a href="#添加部分暂存" class="headerlink" title="添加部分暂存"></a>添加部分暂存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git add -p （git add --patch）命令，交互式暂存此文件的特定部分</span><br><span class="line"></span><br><span class="line">这时有很多选项。 输入 ? 显示所有可以使用的命令列表：</span><br><span class="line">Stage this hunk [y,n,a,d,/,j,J,g,e,?]? ?</span><br><span class="line">y - stage this hunk</span><br><span class="line">n - do not stage this hunk</span><br><span class="line">a - stage this and all the remaining hunks in the file</span><br><span class="line">d - do not stage this hunk nor any of the remaining hunks in the file</span><br><span class="line">g - select a hunk to go to</span><br><span class="line">/ - search for a hunk matching the given regex</span><br><span class="line">j - leave this hunk undecided, see next undecided hunk</span><br><span class="line">J - leave this hunk undecided, see next hunk</span><br><span class="line">k - leave this hunk undecided, see previous undecided hunk</span><br><span class="line">K - leave this hunk undecided, see previous hunk</span><br><span class="line">s - split the current hunk into smaller hunks</span><br></pre></td></tr></table></figure><p>通常，输入<code>y</code>暂存此部分，或者输入<code>n</code>跳过此部分就可以了</p><h2 id="取消暂存"><a href="#取消暂存" class="headerlink" title="取消暂存"></a>取消暂存</h2><p>把对某个文件的修改添加到下次提交中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git restore --staged .   <span class="comment">#取消暂存 所有文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git restore --staged &lt;path&gt; <span class="comment">#取消暂存 指定文件</span></span></span><br></pre></td></tr></table></figure><h2 id="丢弃改动"><a href="#丢弃改动" class="headerlink" title="丢弃改动"></a>丢弃改动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git restore &lt;path&gt; <span class="comment">#丢弃文件的改动</span></span></span><br></pre></td></tr></table></figure><h2 id="删除未跟踪文件"><a href="#删除未跟踪文件" class="headerlink" title="删除未跟踪文件"></a>删除未跟踪文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git clean -f  <span class="comment"># 删除 untracked files</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git clean -fd  <span class="comment"># 连 untracked 的目录也一起删掉</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git clean -nfd <span class="comment"># -n 参数来先看看会删掉哪些文件，防止重要文件被误删</span></span></span><br></pre></td></tr></table></figure><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">&#x27;message here&#x27;</span>   <span class="comment">#用于提交暂存区的文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -am <span class="string">&#x27;message here&#x27;</span> <span class="comment">#用于提交跟踪过的文件,相当于省去了 git add</span></span></span><br></pre></td></tr></table></figure><h2 id="修改上次提交msg"><a href="#修改上次提交msg" class="headerlink" title="修改上次提交msg"></a>修改上次提交msg</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit --amend <span class="comment"># 首先使用命令后，会进入到vim 编辑器,修改注释信息，然后退出。</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit --amend -m [message]    <span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit --amend [file1] [file2] <span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span></span><br></pre></td></tr></table></figure><p>git commit –amend 就是解决一些很小的改动，使得你不想在重现创建一个commit而设定。如果你的commit已经push到了远程仓库，那么使用–amend修改commit后，git push时一定要使用 <strong>–force-with-lease</strong> 参数。否则就会报错:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: 无法推送一些引用到 &#x27;https://github.com/×××/test.git&#x27;</span><br><span class="line">提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。</span><br><span class="line">提示：再次推送前，先与远程变更合并（如 &#x27;git pull ...&#x27;）。详见</span><br><span class="line">提示：&#x27;git push --help&#x27; 中的 &#x27;Note about fast-forwards&#x27; 小节。</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>下载远程仓库代码，但不合并到HEAD中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git fetch &lt;remote&gt;</span></span><br></pre></td></tr></table></figure><p>将远程仓库代码合并到本地版本中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git pull origin master</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull  <span class="comment">#相当于 git fetch + git merge</span></span>  </span><br></pre></td></tr></table></figure><p>强制拉取并覆盖本地代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><p>将分支合并到当前HEAD中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git merge &lt;branch&gt;   <span class="comment"># 把 目标&lt;branch&gt;分支代码 合并到当前分支*</span></span> </span><br></pre></td></tr></table></figure><p>将当前HEAD版本rebase到分支中:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rebase &lt;branch&gt;  <span class="comment"># 把 目标&lt;branch&gt;分支代码 合并到当前分支*</span></span> </span><br></pre></td></tr></table></figure><p><img src="/2021/07/18/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/img_rebase.png"></p><p>退出rebase:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rebase --abort</span></span><br></pre></td></tr></table></figure><p>解决冲突后继续rebase：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git rebase --<span class="built_in">continue</span></span></span><br></pre></td></tr></table></figure><p>在编辑器中手动解决冲突后，标记文件为已解决冲突</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add &lt;resolved-file&gt;</span></span><br></pre></td></tr></table></figure><h2 id="摘选"><a href="#摘选" class="headerlink" title="摘选"></a>摘选</h2><p>当你只需要部分代码变动（某几个提交）转移到另一个分支时，采用 Cherry pick(俗称：摘樱桃)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git cherry-pick &lt;commitHash&gt;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">步骤</span></span><br><span class="line">1.先从原分支查看git log获取待合并的 commitHash</span><br><span class="line">2.然后checkout到目标分支</span><br><span class="line">3.执行git cherry-pick commitHash，即可</span><br><span class="line"></span><br><span class="line">git cherry-pick命令的常用配置项如下。</span><br><span class="line">（1）-e，--edit  打开外部编辑器，编辑提交信息。</span><br><span class="line">（2）-n，--no-commit  只更新工作区和暂存区，不产生新的提交。</span><br><span class="line">（3）-x  在提交信息的末尾追加一行(cherry picked from commit ...)，方便以后查到这个提交是如何产生的。</span><br><span class="line">（4）-s，--signoff 在提交信息的末尾追加一行操作者的签名，表示是谁进行了这个操作。</span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><p>放弃工作目录下的所有修改：</p><p>1.如果是撤销所有的已经add的文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset HEAD    <span class="comment">#等同于 git restore --staged .</span></span></span><br></pre></td></tr></table></figure><p>2.如果是撤销某个文件或文件夹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset HEAD &lt;path&gt;   <span class="comment">#等同于 git restore --staged &lt;path&gt;</span></span> </span><br></pre></td></tr></table></figure><p>3.回退到上次提交</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD^</span></span><br></pre></td></tr></table></figure><p>4.回退到上上次提交</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD^^</span></span><br></pre></td></tr></table></figure><p>5.重置一个提交（通过创建一个截然不同的新提交）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git revert &lt;commit&gt;</span></span><br></pre></td></tr></table></figure><p>6.将HEAD重置到指定的版本，并抛弃该版本之后的所有修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard &lt;commit&gt;</span></span><br></pre></td></tr></table></figure><p>7.已经commit还未push，撤销</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --soft HEAD^</span> </span><br><span class="line"></span><br><span class="line">--soft #不删除工作空间的改动代码 ，撤销commit，不撤销git add file</span><br><span class="line">--hard 删除工作空间的改动代码，撤销commit且撤销add</span><br></pre></td></tr></table></figure><p>这样就成功撤销了commit，如果想要连着add也撤销的话，–soft改为–hard（删除工作空间的改动代码）。</p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git push</span>  </span><br><span class="line"><span class="meta">$</span><span class="bash"> git push &lt;origin&gt; &lt;branch&gt; <span class="comment">#如果添加多个仓库，指定仓库名称</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin develop  <span class="comment">#举例，提交远程origin仓库的develop分支</span></span></span><br></pre></td></tr></table></figure><h2 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span>   <span class="comment">#查看所有历史</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> --author=<span class="string">&quot;username&quot;</span>  <span class="comment">#查看某个用户所有提交历史</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> --oneline -[n] <span class="comment">#查看历史，单行显示提交历史，不展示详情 -5 最近五条</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> -p &lt;path&gt;   <span class="comment">#查看指定文件的提交历史</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reflog <span class="comment"># 显示当前分支的最近几次提交</span></span></span><br></pre></td></tr></table></figure><h2 id="查看提交的内容"><a href="#查看提交的内容" class="headerlink" title="查看提交的内容"></a>查看提交的内容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git show <span class="comment">#查看最近的一此提交内容</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git show commitid <span class="comment">#查看指定的提交内容,，配合 git log --oneline 拿到commitid</span></span></span><br></pre></td></tr></table></figure><h2 id="回滚到某次commit"><a href="#回滚到某次commit" class="headerlink" title="回滚到某次commit"></a>回滚到某次commit</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">回退命令：</span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD^         <span class="comment">#回退到上个版本</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD~3        <span class="comment">#回退到前3次提交之前，以此类推，回退到n次提交之前</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard commit_id     <span class="comment">#退到/进到 指定commit的sha码</span></span></span><br><span class="line"></span><br><span class="line">强推到远程：</span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin HEAD --force</span></span><br></pre></td></tr></table></figure><h2 id="获取完整commit-id"><a href="#获取完整commit-id" class="headerlink" title="获取完整commit id"></a>获取完整commit id</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git rev-parse HEAD</span><br><span class="line">323f71b499929e5436bc38d08722b64a606c173c</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">获取short commit id（如：bb4f92a）</span></span><br><span class="line">git rev-parse --short HEAD</span><br><span class="line">323f71b499</span><br></pre></td></tr></table></figure><h1 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h1><h2 id="执行存储"><a href="#执行存储" class="headerlink" title="执行存储"></a>执行存储</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash save <span class="string">&quot;save message&quot;</span></span></span><br></pre></td></tr></table></figure><p>执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</p><h2 id="查看存储列表"><a href="#查看存储列表" class="headerlink" title="查看存储列表"></a>查看存储列表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash list</span></span><br></pre></td></tr></table></figure><h2 id="显示存储改动的文件"><a href="#显示存储改动的文件" class="headerlink" title="显示存储改动的文件"></a>显示存储改动的文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash show</span></span><br></pre></td></tr></table></figure><p>默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}</p><h2 id="显示存储改动的内容"><a href="#显示存储改动的内容" class="headerlink" title="显示存储改动的内容"></a>显示存储改动的内容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash show -p  <span class="comment">#显示第一个存储的改动，</span></span></span><br></pre></td></tr></table></figure><p>默认show第一个如果显示其他存存储，命令后面加 stash@{$num} -p ，比如第二个：git stash show stash@{1} -p</p><h2 id="应用某个存储"><a href="#应用某个存储" class="headerlink" title="应用某个存储"></a>应用某个存储</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash apply</span></span><br></pre></td></tr></table></figure><p>应用存储，但不会从存储列表中删除，默认使用第一个,即stash@{0}，如果要使用其他追加 stash@{$num} ， 比如第二个：git stash apply stash@{1} </p><h2 id="应用存储且删除记录"><a href="#应用存储且删除记录" class="headerlink" title="应用存储且删除记录"></a>应用存储且删除记录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash pop</span></span><br></pre></td></tr></table></figure><p>应用存储，并从存储列表中删除，默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}</p><h2 id="丢弃存储"><a href="#丢弃存储" class="headerlink" title="丢弃存储"></a>丢弃存储</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash drop stash@&#123;num]</span></span><br></pre></td></tr></table></figure><p>丢弃stash@{$num}存储，从列表中删除这个存储</p><h2 id="删除所有stash"><a href="#删除所有stash" class="headerlink" title="删除所有stash"></a>删除所有stash</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git stash clear</span></span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><h2 id="显示Tag列表"><a href="#显示Tag列表" class="headerlink" title="显示Tag列表"></a>显示Tag列表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git tag</span></span><br></pre></td></tr></table></figure><h2 id="显示标签信息"><a href="#显示标签信息" class="headerlink" title="显示标签信息"></a>显示标签信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git show v2.9_tag</span></span><br><span class="line"></span><br><span class="line">tag v2.9_tag</span><br><span class="line">Tagger: brooks &lt;hyp712@163.com&gt;</span><br><span class="line">Date:   Mon Jul 19 21:06:45 2021 +0800</span><br><span class="line">v2.9美颜</span><br></pre></td></tr></table></figure><p>输出显示了打标签者的信息、打标签的日期时间、附注信息，然后显示具体的提交信息。</p><h2 id="添加Tag"><a href="#添加Tag" class="headerlink" title="添加Tag"></a>添加Tag</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git tag &lt;tagname&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git tag &lt;tagname&gt; -m <span class="string">&quot;messsage&quot;</span></span> </span><br></pre></td></tr></table></figure><h2 id="删除Tag"><a href="#删除Tag" class="headerlink" title="删除Tag"></a>删除Tag</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git tag -d &lt;tagname&gt; <span class="comment">#删除本地标签</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin --delete &lt;tagname&gt;   <span class="comment">#删除远程标签</span></span></span><br></pre></td></tr></table></figure><h2 id="发布标签"><a href="#发布标签" class="headerlink" title="发布标签:"></a>发布标签:</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git push origin v1.0  <span class="comment">#将v1.0tag推送到远程仓库</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin --tags <span class="comment">#将把所有不在远程仓库的标签全部推上去</span></span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Git/">Git</category>
      
      
      <category domain="http://example.com/tags/Git/">Git</category>
      
      
      <comments>http://example.com/2021/07/18/Git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>使用Nexus搭建Maven本地私服</title>
      <link>http://example.com/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/</link>
      <guid>http://example.com/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/</guid>
      <pubDate>Sat, 17 Jul 2021 12:30:01 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;公司业务-核心或基础模块-独立研发，提供aar对其他业务线支持&lt;/li&gt;
&lt;li&gt;在工作中可能存在有些开发机器不能上网&lt;/li&gt;
&lt;li&gt;大量的机器获取jar包会导致公司网络很慢&lt;/li&gt;
&lt;li&gt;有时候公司会自己发布自己的项目版本，其他的项目可能会依赖引用到&lt;/li&gt;
&lt;li&gt;等…..&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综上等原因，我们需要用到Maven本地仓库对项目进行管理。&lt;/p&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;Nexus是Maven的仓库管理器，用来搭建一个本地仓库服务器，这样做的好处便于管理，节约网络资源， 速度快，可以通过SNAPSHOT版本控制，开进行模块间的高效依赖开发。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li>公司业务-核心或基础模块-独立研发，提供aar对其他业务线支持</li><li>在工作中可能存在有些开发机器不能上网</li><li>大量的机器获取jar包会导致公司网络很慢</li><li>有时候公司会自己发布自己的项目版本，其他的项目可能会依赖引用到</li><li>等…..</li></ol><p>综上等原因，我们需要用到Maven本地仓库对项目进行管理。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Nexus是Maven的仓库管理器，用来搭建一个本地仓库服务器，这样做的好处便于管理，节约网络资源， 速度快，可以通过SNAPSHOT版本控制，开进行模块间的高效依赖开发。</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.sonatype.com/nexus/3/nexus-3.31.1-01-unix.tar.gz</span><br></pre></td></tr></table></figure><p>也可以在这里-选择 <a href="https://help.sonatype.com/repomanager3/download/download-archives---repository-manager-3">历史版本</a></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nexus-3.31.1-01-unix.tar.gz</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nexus-3.31.1-01/bin</span><br><span class="line"></span><br><span class="line">./nexus start</span><br></pre></td></tr></table></figure><h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nexus stop</span><br></pre></td></tr></table></figure><h2 id="访问用户界面"><a href="#访问用户界面" class="headerlink" title="访问用户界面"></a>访问用户界面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/</span><br><span class="line"></span><br><span class="line">用户名：admin</span><br><span class="line">密 码： 初始密码可以sonatype-work里找到,使用cat命令获取</span><br><span class="line">cat ./sonatype-work/nexus3/admin.password</span><br><span class="line">c28197d3-0673-4399-b634-effa06b8450a   #初始密码</span><br></pre></td></tr></table></figure><h2 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/Screen+Shot+2017-09-13+at+3.14.25+PM.png"></p><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><p>创建brooks用户，成功后使用brooks登录。</p><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715233429927.png" alt="image-20210715233429927"></p><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><h2 id="设置页面点击-Create-repository"><a href="#设置页面点击-Create-repository" class="headerlink" title="设置页面点击 Create repository"></a>设置页面点击 Create repository</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715233751831.png" alt="image-20210715233751831"></p><h2 id="选择maven2-hosted"><a href="#选择maven2-hosted" class="headerlink" title="选择maven2 hosted"></a>选择maven2 hosted</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234019281.png" alt="image-20210715234019281"></p><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234402305.png" alt="image-20210715234402305"></p><p>点击Create repository开始创建。</p><h2 id="查看创建的仓库"><a href="#查看创建的仓库" class="headerlink" title="查看创建的仓库"></a>查看创建的仓库</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234740899.png" alt="image-20210715234740899"></p><h1 id="上传aar到仓库"><a href="#上传aar到仓库" class="headerlink" title="上传aar到仓库"></a>上传aar到仓库</h1><h2 id="打开Project的build-gradle文件"><a href="#打开Project的build-gradle文件" class="headerlink" title="打开Project的build.gradle文件"></a>打开Project的build.gradle文件</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        ...</span><br><span class="line">        mavenLocal() <span class="comment">//添加这一行，告诉AS，我们使用自己的仓库</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打开module的build-gradle文件"><a href="#打开module的build-gradle文件" class="headerlink" title="打开module的build.gradle文件"></a>打开module的build.gradle文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * release 和 snapshot 仓库的区别</span></span><br><span class="line"><span class="comment"> * release 仓库不能重复上传同一版本号，版本不能覆盖，只能迭代 ，发布正式版本的时候使用</span></span><br><span class="line"><span class="comment"> * snapshot 仓库允许版本覆盖。当我上传多次上传同一个版本到 snapshot 仓库，会自动在版本号上添加时间戳来区分，开发时使用。</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加插件，上传到本地 maven 仓库</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;maven&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义上传行为</span></span><br><span class="line">uploadArchives &#123;</span><br><span class="line">    repositories.mavenDeployer &#123;</span><br><span class="line">        repository(<span class="attr">url:</span> <span class="string">&#x27;http://localhost:8081/repository/com.wali.livelib/&#x27;</span>)&#123; <span class="comment">//url,从仓库详情里获取</span></span><br><span class="line">            authentication(<span class="attr">userName:</span><span class="string">&#x27;brooks&#x27;</span>,<span class="attr">password:</span><span class="string">&#x27;brooks&#x27;</span>)  <span class="comment">//用户名密码，可以配置到文件里</span></span><br><span class="line">        &#125;</span><br><span class="line">        pom.groupId = <span class="string">&#x27;com.brooks.live&#x27;</span> <span class="comment">//组名</span></span><br><span class="line">        pom.artifactId = <span class="string">&#x27;network&#x27;</span>     <span class="comment">//项目id</span></span><br><span class="line">        pom.version = <span class="string">&#x27;1.0.0&#x27;</span>    <span class="comment">//版本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译aar并上传"><a href="#编译aar并上传" class="headerlink" title="编译aar并上传"></a>编译aar并上传</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210716000749534.png" alt="image-20210716000749534"></p><h2 id="上传成功"><a href="#上传成功" class="headerlink" title="上传成功"></a>上传成功</h2><p><img src="/2021/07/17/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210716001240233.png" alt="image-20210716001240233"></p><h1 id="项目引用aar"><a href="#项目引用aar" class="headerlink" title="项目引用aar"></a>项目引用aar</h1><p>在App的build.gradle文件下添加：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">     maven &#123; url <span class="string">&quot;http://localhost:8081/repository/com.wali.livelib/&quot;</span> &#125; <span class="comment">//添加仓库url地址</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在dependencies下添加依赖：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;...implementation <span class="string">&#x27;com.brooks.live:network:1.0.0&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>点击同步，完成！</p><p><strong>感谢：</strong></p><p><a href="https://help.sonatype.com/repomanager3/installation/installation-methods">https://help.sonatype.com/repomanager3/installation/installation-methods</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Nexus/">Nexus</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/Nexus/">Nexus</category>
      
      
    </item>
    
    <item>
      <title>Android AOSP（二）源码编译</title>
      <link>http://example.com/2021/07/16/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</link>
      <guid>http://example.com/2021/07/16/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</guid>
      <pubDate>Fri, 16 Jul 2021 10:31:01 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;整编&quot;&gt;&lt;a href=&quot;#整编&quot; class=&quot;headerlink&quot; title=&quot;整编&quot;&gt;&lt;/a&gt;整编&lt;/h1&gt;&lt;p&gt;整编，就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img、ramdisk.img 等，这些是可以刷机的。&lt;/p&gt;
&lt;h2 id=&quot;准备编译环境&quot;&gt;&lt;a href=&quot;#准备编译环境&quot; class=&quot;headerlink&quot; title=&quot;准备编译环境&quot;&gt;&lt;/a&gt;&lt;strong&gt;准备编译环境&lt;/strong&gt;&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="整编"><a href="#整编" class="headerlink" title="整编"></a>整编</h1><p>整编，就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img、ramdisk.img 等，这些是可以刷机的。</p><h2 id="准备编译环境"><a href="#准备编译环境" class="headerlink" title="准备编译环境"></a><strong>准备编译环境</strong></h2><span id="more"></span><p><strong>1.安装 openjdk</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure><p><strong>2.安装以下依赖包：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip</span><br></pre></td></tr></table></figure><h2 id="初始化编译环境"><a href="#初始化编译环境" class="headerlink" title="初始化编译环境"></a>初始化编译环境</h2><p>进入项目目录，打开终端，输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source build/envsetup.sh</span><br></pre></td></tr></table></figure><p>编译前删除build文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clobber</span><br></pre></td></tr></table></figure><h2 id="选择编译目标"><a href="#选择编译目标" class="headerlink" title="选择编译目标"></a>选择编译目标</h2><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch</span><br></pre></td></tr></table></figure><p>lunch命令是envsetup.sh里定义的一个命令，用来让用户选择编译目标。</p><p>输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">You&#x27;re building on Linux</span><br><span class="line"></span><br><span class="line">Lunch menu... pick a combo:</span><br><span class="line">     1. aosp_arm-eng</span><br><span class="line">     2. aosp_arm64-eng</span><br><span class="line">     3. aosp_blueline-userdebug</span><br><span class="line">     4. aosp_blueline_car-userdebug</span><br><span class="line">     5. aosp_bonito-userdebug</span><br><span class="line">     6. aosp_bonito_car-userdebug</span><br><span class="line">     7. aosp_bramble-userdebug</span><br><span class="line">     8. aosp_car_arm-userdebug</span><br><span class="line">     9. aosp_car_arm64-userdebug</span><br><span class="line">     10. aosp_car_x86-userdebug</span><br><span class="line">     11. aosp_car_x86_64-userdebug</span><br><span class="line">     12. aosp_cf_arm64_auto-userdebug</span><br><span class="line">     13. aosp_cf_arm64_phone-userdebug</span><br><span class="line">     14. aosp_cf_x86_64_pc-userdebug</span><br><span class="line">     15. aosp_cf_x86_64_phone-userdebug</span><br><span class="line">     16. aosp_cf_x86_auto-userdebug</span><br><span class="line">     17. aosp_cf_x86_phone-userdebug</span><br><span class="line">     18. aosp_cf_x86_tv-userdebug</span><br><span class="line">     19. aosp_coral-userdebug</span><br><span class="line">     20. aosp_coral_car-userdebug</span><br><span class="line">     21. aosp_crosshatch-userdebug</span><br><span class="line">     22. aosp_crosshatch_car-userdebug</span><br><span class="line">     23. aosp_flame-userdebug</span><br><span class="line">     24. aosp_flame_car-userdebug</span><br><span class="line">     25. aosp_redfin-userdebug</span><br><span class="line">     26. aosp_sargo-userdebug</span><br><span class="line">     27. aosp_sunfish-userdebug</span><br><span class="line">     28. aosp_trout_arm64-userdebug</span><br><span class="line">     29. aosp_trout_x86-userdebug</span><br><span class="line">     30. aosp_x86-eng</span><br><span class="line">     31. aosp_x86_64-eng</span><br><span class="line">     32. arm_krait-eng</span><br><span class="line">     33. arm_v7_v8-eng</span><br><span class="line">     34. armv8-eng</span><br><span class="line">     35. armv8_cortex_a55-eng</span><br><span class="line">     36. armv8_kryo385-eng</span><br><span class="line">     37. beagle_x15-userdebug</span><br><span class="line">     38. beagle_x15_auto-userdebug</span><br><span class="line">     39. car_x86_64-userdebug</span><br><span class="line">     40. db845c-userdebug</span><br><span class="line">     41. fuchsia_arm64-eng</span><br><span class="line">     42. fuchsia_x86_64-eng</span><br><span class="line">     43. hikey-userdebug</span><br><span class="line">     44. hikey64_only-userdebug</span><br><span class="line">     45. hikey960-userdebug</span><br><span class="line">     46. hikey960_tv-userdebug</span><br><span class="line">     47. hikey_tv-userdebug</span><br><span class="line">     48. pixel3_mainline-userdebug</span><br><span class="line">     49. poplar-eng</span><br><span class="line">     50. poplar-user</span><br><span class="line">     51. poplar-userdebug</span><br><span class="line">     52. qemu_trusty_arm64-userdebug</span><br><span class="line">     53. silvermont-eng</span><br><span class="line">     54. uml-userdebug</span><br><span class="line">     55. yukawa-userdebug</span><br><span class="line">     56. yukawa_sei510-userdebug</span><br><span class="line"></span><br><span class="line">Which would you like? [aosp_arm-eng] </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>lunch</code> 命令选择要构建的<a href="https://source.android.google.cn/setup/build/building#choose-a-target">目标</a>设备类型。目标是指设备组合，例如特定型号或设备类型。</p><p>其中BUILD表示编译出的镜像可以运行在什么环境，aosp代表Android开源项目，arm表示系统是运行在arm架构的处理器上。</p><p><strong>BUILDTYPE 则指的是编译类型，通常有三种:</strong></p><ul><li>user：用来正式发布到市场的版本，权限受限，如没有 root 权限，不能 dedug 等。</li><li>userdebug：在user版本的基础上开放了 root 权限和 debug 权限。</li><li>eng：代表 engineer，开发工程师的版本，拥有最大的权限(root等)，具有额外调试工具的开发配置。</li></ul><p>如果没有谷歌手机设备，可以选择 arm 或者 x86，我选择了 <strong>aosp_x86_64-eng</strong>，编译完后运行模拟器看看，因此这里选择序号 <strong>31</strong>。</p><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>通过 make 指令进行代码编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j6  #建议不要大于等于电脑核数，否则出现内存不足，编译失败（切身体会）</span><br></pre></td></tr></table></figure><p>其中 -j N 参数表示处理并行任务，通常使用的任务数 N 介于编译时所用计算机上硬件线程数的 1-2 倍之间。</p><p>查看计算机上的核心数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">brooks@MiPro:~/work/aosp$ cat /proc/cpuinfo | grep processor</span><br><span class="line">processor: 0</span><br><span class="line">processor: 1</span><br><span class="line">processor: 2</span><br><span class="line">processor: 3</span><br><span class="line">processor: 4</span><br><span class="line">processor: 5</span><br><span class="line">processor: 6</span><br><span class="line">processor: 7</span><br></pre></td></tr></table></figure><p>开始编译输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">brooks@brooks-Mi-Pro:~/aosp$ make -j6</span><br><span class="line">09:47:02 ************************************************************</span><br><span class="line">09:47:02 You are building on a machine with 15.5GB of RAM</span><br><span class="line">09:47:02 </span><br><span class="line">09:47:02 The minimum required amount of free memory is around 16GB,</span><br><span class="line">09:47:02 and even with that, some configurations may not work.</span><br><span class="line">09:47:02 </span><br><span class="line">09:47:02 If you run into segfaults or other errors, try reducing your</span><br><span class="line">09:47:02 -j value.</span><br><span class="line">09:47:02 ************************************************************</span><br><span class="line">build/make/core/soong_config.mk:195: warning: BOARD_PLAT_PUBLIC_SEPOLICY_DIR has been deprecated. Us</span><br><span class="line">e SYSTEM_EXT_PUBLIC_SEPOLICY_DIRS instead.</span><br><span class="line">build/make/core/soong_config.mk:196: warning: BOARD_PLAT_PRIVATE_SEPOLICY_DIR has been deprecated. U</span><br><span class="line">se SYSTEM_EXT_PRIVATE_SEPOLICY_DIRS instead.</span><br><span class="line">============================================</span><br><span class="line">PLATFORM_VERSION_CODENAME=T</span><br><span class="line">PLATFORM_VERSION=T</span><br><span class="line">TARGET_PRODUCT=aosp_x86_64</span><br><span class="line">TARGET_BUILD_VARIANT=eng</span><br><span class="line">TARGET_BUILD_TYPE=release</span><br><span class="line">TARGET_ARCH=x86_64</span><br><span class="line">TARGET_ARCH_VARIANT=x86_64</span><br><span class="line">TARGET_2ND_ARCH=x86</span><br><span class="line">TARGET_2ND_ARCH_VARIANT=x86_64</span><br><span class="line">HOST_ARCH=x86_64</span><br><span class="line">HOST_2ND_ARCH=x86</span><br><span class="line">HOST_OS=linux</span><br><span class="line">HOST_OS_EXTRA=Linux-5.8.0-59-generic-x86_64-Ubuntu-20.04.2-LTS</span><br><span class="line">HOST_CROSS_OS=windows</span><br><span class="line">HOST_CROSS_ARCH=x86</span><br><span class="line">HOST_CROSS_2ND_ARCH=x86_64</span><br><span class="line">HOST_BUILD_TYPE=release</span><br><span class="line">BUILD_ID=AOSP.MASTER</span><br><span class="line">OUT_DIR=out</span><br><span class="line"></span><br><span class="line">PRODUCT_SOONG_NAMESPACES=device/generic/goldfish device/generic/goldfish-opengl hardware/google/camera hardware/google/camera/devices/EmulatedCamera</span><br><span class="line">============================================</span><br></pre></td></tr></table></figure><p><strong>编译错误参考</strong>：<a href="https://www.jianshu.com/p/8ec0f1f1863a">https://www.jianshu.com/p/8ec0f1f1863a</a></p><h2 id="编译成功-大概花费时长：5h"><a href="#编译成功-大概花费时长：5h" class="headerlink" title="编译成功-大概花费时长：5h"></a>编译成功-大概花费时长：5h</h2><p>第一次编译比较慢，大概5小时左右，编译n次才通过</p><p><img src="/2021/07/16/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/image-20210804103058313.png" alt="image-20210804103058313"></p><h2 id="运行模拟器"><a href="#运行模拟器" class="headerlink" title="运行模拟器"></a>运行模拟器</h2><p>在编译完成之后,就可以通过以下命令运行Android虚拟机了，命令如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source build/envsetup.sh</span><br><span class="line">lunch 31</span><br><span class="line">emulator  #如果编译后运行，直接使用此命令</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">emulator: WARNING: Couldn&#x27;t find crash service executable /home/brooks/aosp-resource/aosp/prebuilts/android-emulator/linux-x86_64/emulator64-crash-service</span><br><span class="line">emulator: WARNING: system partition size adjusted to match image file (2562 MB &gt; 800 MB)</span><br><span class="line">Your emulator is out of date, please update by launching Android Studio:</span><br><span class="line"> - Start Android Studio</span><br><span class="line"> - Select menu &quot;Tools &gt; Android &gt; SDK Manager&quot;</span><br><span class="line"> - Click &quot;SDK Tools&quot; tab</span><br><span class="line"> - Check &quot;Android Emulator&quot; checkbox</span><br><span class="line"> - Click &quot;OK&quot;</span><br><span class="line"></span><br><span class="line">emulator: INFO: boot completed</span><br></pre></td></tr></table></figure><p><img src="/2021/07/16/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/image-20210804102211546.png" alt="image-20210804102211546"></p><p><strong>注：</strong>模拟器一直运行失败，各种错误解决不了。建议从官网下载aosp，然后重新编译。</p><p>模拟器运行需要四个文件，分别是：</p><ul><li>Linux Kernel</li><li>system.img</li><li>userdata.img</li><li>ramdisk.img</li></ul><p>上面我 lunch 命令时选择的是 aosp_x86_64-eng，因此 linux 默认使用的 AOSP/prebuilds/qemu-kernel/x86_64/kernel-qemu 下的 kernel-qemu，而其他文件则是使用的 AOSP/out/target/product/generic_x86 目录下的 system.img、userdata.img、ramdisk.img</p><p><strong>感谢：</strong></p><p><a href="http://wuxiaolong.me/2018/07/25/AOSP2/">http://wuxiaolong.me/2018/07/25/AOSP2/</a><br><a href="https://source.android.com/setup/build/building">https://source.android.com/setup/build/building</a><br><a href="http://liuwangshu.cn/framework/aosp/3-compiling-aosp.html">http://liuwangshu.cn/framework/aosp/3-compiling-aosp.html</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/AOSP/">AOSP</category>
      
      
      <category domain="http://example.com/tags/AOSP/">AOSP</category>
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      
    </item>
    
    <item>
      <title>Android AOSP（一）源码和内核源码下载</title>
      <link>http://example.com/2021/07/16/Android%20AOSP%EF%BC%88%E4%B8%80%EF%BC%89%E6%BA%90%E7%A0%81%E5%92%8C%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</link>
      <guid>http://example.com/2021/07/16/Android%20AOSP%EF%BC%88%E4%B8%80%EF%BC%89%E6%BA%90%E7%A0%81%E5%92%8C%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</guid>
      <pubDate>Fri, 16 Jul 2021 02:30:01 GMT</pubDate>
      
      <description>&lt;p&gt;AOSP(Android Open Source Project) 代码库可为您提供所需信息和源代码，供您创建定制的 Android 操作系统版本，将设备和配件移植到 Android 平台。官网：&lt;a href=&quot;https://source.android.google.cn/&quot;&gt;https://source.android.google.cn/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;下载repo&quot;&gt;&lt;a href=&quot;#下载repo&quot; class=&quot;headerlink&quot; title=&quot;下载repo&quot;&gt;&lt;/a&gt;下载repo&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://gerrit.googlesource.com/git-repo/+/refs/heads/master/README.md&quot;&gt;Repo&lt;/a&gt; Google开发的一个工具，整合多个 Git 代码库，自动执行 Android 开发工作流程的部分环节。不会取代 Git，只是为了让您在 Android 环境中更轻松地使用 Git。&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>AOSP(Android Open Source Project) 代码库可为您提供所需信息和源代码，供您创建定制的 Android 操作系统版本，将设备和配件移植到 Android 平台。官网：<a href="https://source.android.google.cn/">https://source.android.google.cn/</a></p><h1 id="下载repo"><a href="#下载repo" class="headerlink" title="下载repo"></a>下载repo</h1><p><a href="https://gerrit.googlesource.com/git-repo/+/refs/heads/master/README.md">Repo</a> Google开发的一个工具，整合多个 Git 代码库，自动执行 Android 开发工作流程的部分环节。不会取代 Git，只是为了让您在 Android 环境中更轻松地使用 Git。</p><span id="more"></span><p>ubuntu输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git  </span><br></pre></td></tr></table></figure><p>配置环境变量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/bin</span><br><span class="line">PATH=~/bin:$PATH</span><br></pre></td></tr></table></figure><p>安装curl：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br></pre></td></tr></table></figure><p>下载repo并设置权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo</span><br><span class="line">chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><p>安装python:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python</span><br></pre></td></tr></table></figure><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><h2 id="下载源码《方法一》"><a href="#下载源码《方法一》" class="headerlink" title="下载源码《方法一》"></a>下载源码《方法一》</h2><p>建立工作目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir aosp</span><br><span class="line">cd aosp</span><br></pre></td></tr></table></figure><p>初始化仓库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest</span><br></pre></td></tr></table></figure><p>初始化并指定版本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-8.0.0_r15</span><br></pre></td></tr></table></figure><p>同步源码树：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync</span><br></pre></td></tr></table></figure><p>然后等待下载完毕,大概源码大小为 65G</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brooks@brooks-MiPro:~/aosp$ du -sh</span><br><span class="line">65G</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">我下载了N次，每次都会有小部分文件失败，然后编译，最终编译成功，但是模拟器跑步起来</span></span><br></pre></td></tr></table></figure><h2 id="下载源码《方法二》"><a href="#下载源码《方法二》" class="headerlink" title="下载源码《方法二》"></a>下载源码《方法二》</h2><p>方法一，任何网络故障大概率出现部分文件下载失败，强烈建议使用方法二。大概124G</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar # 下载初始化包</span><br><span class="line">tar xf aosp-latest.tar</span><br><span class="line">cd AOSP   # 解压得到的 AOSP 工程目录，此时只有一个隐藏的 .repo 目录</span><br><span class="line">repo sync # 正常同步一遍即可得到完整目录 或 repo sync -l 仅checkout代码</span><br></pre></td></tr></table></figure><p>此后，每次只需运行 <code>repo sync</code> 即可保持同步。 <strong>我们强烈建议您保持每天同步，并尽量选择凌晨等低峰时间</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aosp-latest.tar                        100%[++++++++++===========================================================&gt;] 123.57G  3.27MB/s    用时 9h 9m s</span><br><span class="line"></span><br><span class="line">2021-07-23 08:40:22 (3.31 MB/s) - 已保存 “aosp-latest.tar” [132684083200/132684083200])</span><br></pre></td></tr></table></figure><h1 id="下载内核源码"><a href="#下载内核源码" class="headerlink" title="下载内核源码"></a>下载内核源码</h1><p>AOSP源码中并不包括内核源码，需要单独下载，内核源码有很多版本，比如common是通用的Linux内核，msm是用于使用高通MSM芯片的Android设备，goldfish是用于Android模拟器的内核源码，这里以goldfish为例。</p><p>建立工作目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir kernel</span><br><span class="line">cd kernel</span><br></pre></td></tr></table></figure><p>使用清华的镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://aosp.tuna.tsinghua.edu.cn/kernel/goldfish.git</span><br></pre></td></tr></table></figure><p><strong>注：</strong>大概率git下载失败，文件过大。网上搜增加git缓存-依然无效，后来想到国内gitee，借助它完美下载，速度超快。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">完美解决-下载速度快</span></span><br><span class="line">git clone https://gitee.com/gnosz/goldfish.git </span><br><span class="line"></span><br><span class="line">正克隆到 &#x27;goldfish&#x27;...</span><br><span class="line">remote: Enumerating objects: 6038180, done.</span><br><span class="line">remote: Counting objects: 100% (6038180/6038180), done.</span><br><span class="line">remote: Compressing objects: 100% (916276/916276), done.</span><br><span class="line">remote: Total 6038180 (delta 5082037), reused 6034994 (delta 5079268), pack-reused 0</span><br><span class="line">接收对象中: 100% (6038180/6038180), 1.29 GiB | 3.37 MiB/s, 完成.</span><br><span class="line">处理 delta 中: 100% (5082037/5082037), 完成.</span><br></pre></td></tr></table></figure><p>这时kernel目录中会生成一个goldfish文件夹，进入后使用git命令查看有哪些内核版本分支可以下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cd goldfish</span><br><span class="line"></span><br><span class="line">brooks@MiPro:~/kernel/goldfish$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/android-3.10</span><br><span class="line">  remotes/origin/android-3.18</span><br><span class="line">  remotes/origin/android-3.4</span><br><span class="line">  remotes/origin/android-4.14</span><br><span class="line">  remotes/origin/android-4.4</span><br><span class="line">  remotes/origin/android-goldfish-2.6.29</span><br><span class="line">  remotes/origin/android-goldfish-3.10</span><br><span class="line">  remotes/origin/android-goldfish-3.10-k-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-l-mr1-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-m-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-n-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.18</span><br><span class="line">  remotes/origin/android-goldfish-3.18-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.4</span><br><span class="line">  remotes/origin/android-goldfish-3.4-l-mr1-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.120914098</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.20190417</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.backup</span><br><span class="line">  remotes/origin/android-goldfish-4.4-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.9-dev</span><br><span class="line">  remotes/origin/b12</span><br><span class="line">  remotes/origin/b120914098</span><br><span class="line">  remotes/origin/heads/for/android-goldfish-3.18-dev</span><br><span class="line">  remotes/origin/linux-goldfish-3.0-wip</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/test</span><br><span class="line">  remotes/origin/tparker-recovery</span><br></pre></td></tr></table></figure><p>这里选择下载goldfish 3.4版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout remotes/origin/android-goldfish-3.4</span><br><span class="line"></span><br><span class="line">git switch -c origin/android-goldfish-3.4</span><br></pre></td></tr></table></figure><p><strong>感谢：</strong></p><p><a href="http://liuwangshu.cn/framework/aosp/2-download-aosp.html">http://liuwangshu.cn/framework/aosp/2-download-aosp.html</a><br><a href="https://source.android.google.cn/setup/start">https://source.android.google.cn/setup/start</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/AOSP/">AOSP</category>
      
      
      <category domain="http://example.com/tags/AOSP/">AOSP</category>
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      
    </item>
    
  </channel>
</rss>
