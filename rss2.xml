<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Brooks</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>凡心所向，素履所往，生如逆旅，一苇以航。</description>
    <pubDate>Fri, 16 Jul 2021 07:20:41 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>使用Nexus搭建Maven本地私服</title>
      <link>http://example.com/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/</link>
      <guid>http://example.com/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/</guid>
      <pubDate>Fri, 16 Jul 2021 12:30:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;公司业务-核心或基础模块-独立研发，提供aar对其他业务线支持&lt;/li&gt;
&lt;li&gt;在工作中可能存在有些开发机器不能上网&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ol><li>公司业务-核心或基础模块-独立研发，提供aar对其他业务线支持</li><li>在工作中可能存在有些开发机器不能上网</li><li>大量的机器获取jar包会导致公司网络很慢</li><li>有时候公司会自己发布自己的项目版本，其他的项目可能会依赖引用到</li><li>等…..</li></ol><p>综上等原因，我们需要用到Maven本地仓库对项目进行管理。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Nexus是Maven的仓库管理器，用来搭建一个本地仓库服务器，这样做的好处便于管理，节约网络资源， 速度快，可以通过SNAPSHOT版本控制，开进行模块间的高效依赖开发。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.sonatype.com/nexus/3/nexus-3.31.1-01-unix.tar.gz</span><br></pre></td></tr></table></figure><p>也可以在这里-选择 <a href="https://help.sonatype.com/repomanager3/download/download-archives---repository-manager-3">历史版本</a></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nexus-3.31.1-01-unix.tar.gz</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nexus-3.31.1-01/bin</span><br><span class="line"></span><br><span class="line">./nexus start</span><br></pre></td></tr></table></figure><h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nexus stop</span><br></pre></td></tr></table></figure><h2 id="访问用户界面"><a href="#访问用户界面" class="headerlink" title="访问用户界面"></a>访问用户界面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/</span><br><span class="line"></span><br><span class="line">用户名：admin</span><br><span class="line">密 码： 初始密码可以sonatype-work里找到,使用cat命令获取</span><br><span class="line">cat ./sonatype-work/nexus3/admin.password</span><br><span class="line">c28197d3-0673-4399-b634-effa06b8450a   #初始密码</span><br></pre></td></tr></table></figure><h2 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/Screen+Shot+2017-09-13+at+3.14.25+PM.png"></p><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><p>创建brooks用户，成功后使用brooks登录。</p><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715233429927.png" alt="image-20210715233429927"></p><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><h2 id="设置页面点击-Create-repository"><a href="#设置页面点击-Create-repository" class="headerlink" title="设置页面点击 Create repository"></a>设置页面点击 Create repository</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715233751831.png" alt="image-20210715233751831"></p><h2 id="选择maven2-hosted"><a href="#选择maven2-hosted" class="headerlink" title="选择maven2 hosted"></a>选择maven2 hosted</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234019281.png" alt="image-20210715234019281"></p><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234402305.png" alt="image-20210715234402305"></p><p>点击Create repository开始创建。</p><h2 id="查看创建的仓库"><a href="#查看创建的仓库" class="headerlink" title="查看创建的仓库"></a>查看创建的仓库</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210715234740899.png" alt="image-20210715234740899"></p><h1 id="上传aar到仓库"><a href="#上传aar到仓库" class="headerlink" title="上传aar到仓库"></a>上传aar到仓库</h1><h2 id="打开Project的build-gradle文件"><a href="#打开Project的build-gradle文件" class="headerlink" title="打开Project的build.gradle文件"></a>打开Project的build.gradle文件</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        ...</span><br><span class="line">        mavenLocal() <span class="comment">//添加这一行，告诉AS，我们使用自己的仓库</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打开module的build-gradle文件"><a href="#打开module的build-gradle文件" class="headerlink" title="打开module的build.gradle文件"></a>打开module的build.gradle文件</h2><p>添加以下配置：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加插件，上传到本地 maven 仓库</span></span><br><span class="line">apply <span class="attr">plugin:</span> <span class="string">&#x27;maven&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义上传行为</span></span><br><span class="line">uploadArchives &#123;</span><br><span class="line">    repositories.mavenDeployer &#123;</span><br><span class="line">        repository(<span class="attr">url:</span> <span class="string">&#x27;http://localhost:8081/repository/com.wali.livelib/&#x27;</span>)&#123; <span class="comment">//url,从仓库详情里获取</span></span><br><span class="line">            authentication(<span class="attr">userName:</span><span class="string">&#x27;brooks&#x27;</span>,<span class="attr">password:</span><span class="string">&#x27;brooks&#x27;</span>)  <span class="comment">//用户名密码，可以配置到文件里</span></span><br><span class="line">        &#125;</span><br><span class="line">        pom.groupId = <span class="string">&#x27;com.brooks.live&#x27;</span> <span class="comment">//组名</span></span><br><span class="line">        pom.artifactId = <span class="string">&#x27;network&#x27;</span>     <span class="comment">//项目id</span></span><br><span class="line">        pom.version = <span class="string">&#x27;1.0.0&#x27;</span>    <span class="comment">//版本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译aar并上传"><a href="#编译aar并上传" class="headerlink" title="编译aar并上传"></a>编译aar并上传</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210716000749534.png" alt="image-20210716000749534"></p><h2 id="上传成功"><a href="#上传成功" class="headerlink" title="上传成功"></a>上传成功</h2><p><img src="/2021/07/16/%E4%BD%BF%E7%94%A8Nexus%E6%90%AD%E5%BB%BAMaven%E6%9C%AC%E5%9C%B0%E7%A7%81%E6%9C%8D/image-20210716001240233.png" alt="image-20210716001240233"></p><h1 id="项目引用aar"><a href="#项目引用aar" class="headerlink" title="项目引用aar"></a>项目引用aar</h1><p>在App的build.gradle文件下添加：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">     maven &#123; url <span class="string">&quot;http://localhost:8081/repository/com.wali.livelib/&quot;</span> &#125; <span class="comment">//添加仓库url地址</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在dependencies下添加依赖：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;...implementation <span class="string">&#x27;com.brooks.live:network:1.0.0&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>点击同步，完成！</p><p>感谢：</p><p><a href="https://help.sonatype.com/repomanager3/installation/installation-methods">https://help.sonatype.com/repomanager3/installation/installation-methods</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Nexus/">Nexus</category>
      
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      <category domain="http://example.com/tags/Nexus/">Nexus</category>
      
      
    </item>
    
    <item>
      <title>Android AOSP（二）源码编译</title>
      <link>http://example.com/2021/07/15/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</link>
      <guid>http://example.com/2021/07/15/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</guid>
      <pubDate>Thu, 15 Jul 2021 10:31:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;整编&quot;&gt;&lt;a href=&quot;#整编&quot; class=&quot;headerlink&quot; title=&quot;整编&quot;&gt;&lt;/a&gt;整编&lt;/h1&gt;&lt;p&gt;整编，就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="整编"><a href="#整编" class="headerlink" title="整编"></a>整编</h1><p>整编，就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img、ramdisk.img 等，这些是可以刷机的。</p><h2 id="初始化编译环境"><a href="#初始化编译环境" class="headerlink" title="初始化编译环境"></a>初始化编译环境</h2><p>进入项目目录，打开终端，输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source build/envsetup.sh</span><br></pre></td></tr></table></figure><p>编译前删除build文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make clobber</span><br></pre></td></tr></table></figure><h2 id="选择编译目标"><a href="#选择编译目标" class="headerlink" title="选择编译目标"></a>选择编译目标</h2><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch</span><br></pre></td></tr></table></figure><p>lunch命令是envsetup.sh里定义的一个命令，用来让用户选择编译目标。</p><p>输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">You&#x27;re building on Linux</span><br><span class="line"></span><br><span class="line">Lunch menu... pick a combo:</span><br><span class="line">     1. aosp_arm-eng</span><br><span class="line">     2. aosp_arm64-eng</span><br><span class="line">     3. aosp_blueline-userdebug</span><br><span class="line">     4. aosp_blueline_car-userdebug</span><br><span class="line">     5. aosp_bonito-userdebug</span><br><span class="line">     6. aosp_bonito_car-userdebug</span><br><span class="line">     7. aosp_bramble-userdebug</span><br><span class="line">     8. aosp_car_arm-userdebug</span><br><span class="line">     9. aosp_car_arm64-userdebug</span><br><span class="line">     10. aosp_car_x86-userdebug</span><br><span class="line">     11. aosp_car_x86_64-userdebug</span><br><span class="line">     12. aosp_cf_arm64_auto-userdebug</span><br><span class="line">     13. aosp_cf_arm64_phone-userdebug</span><br><span class="line">     14. aosp_cf_x86_64_pc-userdebug</span><br><span class="line">     15. aosp_cf_x86_64_phone-userdebug</span><br><span class="line">     16. aosp_cf_x86_auto-userdebug</span><br><span class="line">     17. aosp_cf_x86_phone-userdebug</span><br><span class="line">     18. aosp_cf_x86_tv-userdebug</span><br><span class="line">     19. aosp_coral-userdebug</span><br><span class="line">     20. aosp_coral_car-userdebug</span><br><span class="line">     21. aosp_crosshatch-userdebug</span><br><span class="line">     22. aosp_crosshatch_car-userdebug</span><br><span class="line">     23. aosp_flame-userdebug</span><br><span class="line">     24. aosp_flame_car-userdebug</span><br><span class="line">     25. aosp_redfin-userdebug</span><br><span class="line">     26. aosp_sargo-userdebug</span><br><span class="line">     27. aosp_sunfish-userdebug</span><br><span class="line">     28. aosp_trout_arm64-userdebug</span><br><span class="line">     29. aosp_trout_x86-userdebug</span><br><span class="line">     30. aosp_x86-eng</span><br><span class="line">     31. aosp_x86_64-eng</span><br><span class="line">     32. arm_krait-eng</span><br><span class="line">     33. arm_v7_v8-eng</span><br><span class="line">     34. armv8-eng</span><br><span class="line">     35. armv8_cortex_a55-eng</span><br><span class="line">     36. armv8_kryo385-eng</span><br><span class="line">     37. beagle_x15-userdebug</span><br><span class="line">     38. beagle_x15_auto-userdebug</span><br><span class="line">     39. car_x86_64-userdebug</span><br><span class="line">     40. db845c-userdebug</span><br><span class="line">     41. fuchsia_arm64-eng</span><br><span class="line">     42. fuchsia_x86_64-eng</span><br><span class="line">     43. hikey-userdebug</span><br><span class="line">     44. hikey64_only-userdebug</span><br><span class="line">     45. hikey960-userdebug</span><br><span class="line">     46. hikey960_tv-userdebug</span><br><span class="line">     47. hikey_tv-userdebug</span><br><span class="line">     48. pixel3_mainline-userdebug</span><br><span class="line">     49. poplar-eng</span><br><span class="line">     50. poplar-user</span><br><span class="line">     51. poplar-userdebug</span><br><span class="line">     52. qemu_trusty_arm64-userdebug</span><br><span class="line">     53. silvermont-eng</span><br><span class="line">     54. uml-userdebug</span><br><span class="line">     55. yukawa-userdebug</span><br><span class="line">     56. yukawa_sei510-userdebug</span><br><span class="line"></span><br><span class="line">Which would you like? [aosp_arm-eng] </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>lunch</code> 命令选择要构建的<a href="https://source.android.google.cn/setup/build/building#choose-a-target">目标</a>设备类型。目标是指设备组合，例如特定型号或设备类型。</p><p>其中BUILD表示编译出的镜像可以运行在什么环境，aosp代表Android开源项目，arm表示系统是运行在arm架构的处理器上。</p><p><strong>BUILDTYPE 则指的是编译类型，通常有三种:</strong></p><ul><li>user：用来正式发布到市场的版本，权限受限，如没有 root 权限，不能 dedug 等。</li><li>userdebug：在user版本的基础上开放了 root 权限和 debug 权限。</li><li>eng：代表 engineer，开发工程师的版本，拥有最大的权限(root等)，具有额外调试工具的开发配置。</li></ul><p>如果没有谷歌手机设备，可以选择 arm 或者 x86，我选择了 <strong>aosp_x86_64-eng</strong>，编译完后运行模拟器看看，因此这里选择序号 <strong>31</strong>。</p><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>通过 make 指令进行代码编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j6  #建议不要大于等于电脑核数，否则出现内存不足，编译失败（切身体会）</span><br></pre></td></tr></table></figure><p>其中 -j N 参数表示处理并行任务，通常使用的任务数 N 介于编译时所用计算机上硬件线程数的 1-2 倍之间。</p><p>查看计算机上的核心数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">brooks@MiPro:~/work/aosp$ cat /proc/cpuinfo | grep processor</span><br><span class="line">processor: 0</span><br><span class="line">processor: 1</span><br><span class="line">processor: 2</span><br><span class="line">processor: 3</span><br><span class="line">processor: 4</span><br><span class="line">processor: 5</span><br><span class="line">processor: 6</span><br><span class="line">processor: 7</span><br></pre></td></tr></table></figure><p>开始编译输出：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">brooks@brooks-Mi-Pro:~/aosp$ make -j6</span><br><span class="line">09:47:02 ************************************************************</span><br><span class="line">09:47:02 You are building on a machine with 15.5GB of RAM</span><br><span class="line">09:47:02 </span><br><span class="line">09:47:02 The minimum required amount of free memory is around 16GB,</span><br><span class="line">09:47:02 and even with that, some configurations may not work.</span><br><span class="line">09:47:02 </span><br><span class="line">09:47:02 If you run into segfaults or other errors, try reducing your</span><br><span class="line">09:47:02 -j value.</span><br><span class="line">09:47:02 ************************************************************</span><br><span class="line">build/make/core/soong_config.mk:195: warning: BOARD_PLAT_PUBLIC_SEPOLICY_DIR has been deprecated. Us</span><br><span class="line">e SYSTEM_EXT_PUBLIC_SEPOLICY_DIRS instead.</span><br><span class="line">build/make/core/soong_config.mk:196: warning: BOARD_PLAT_PRIVATE_SEPOLICY_DIR has been deprecated. U</span><br><span class="line">se SYSTEM_EXT_PRIVATE_SEPOLICY_DIRS instead.</span><br><span class="line">============================================</span><br><span class="line">PLATFORM_VERSION_CODENAME=T</span><br><span class="line">PLATFORM_VERSION=T</span><br><span class="line">TARGET_PRODUCT=aosp_x86_64</span><br><span class="line">TARGET_BUILD_VARIANT=eng</span><br><span class="line">TARGET_BUILD_TYPE=release</span><br><span class="line">TARGET_ARCH=x86_64</span><br><span class="line">TARGET_ARCH_VARIANT=x86_64</span><br><span class="line">TARGET_2ND_ARCH=x86</span><br><span class="line">TARGET_2ND_ARCH_VARIANT=x86_64</span><br><span class="line">HOST_ARCH=x86_64</span><br><span class="line">HOST_2ND_ARCH=x86</span><br><span class="line">HOST_OS=linux</span><br><span class="line">HOST_OS_EXTRA=Linux-5.8.0-59-generic-x86_64-Ubuntu-20.04.2-LTS</span><br><span class="line">HOST_CROSS_OS=windows</span><br><span class="line">HOST_CROSS_ARCH=x86</span><br><span class="line">HOST_CROSS_2ND_ARCH=x86_64</span><br><span class="line">HOST_BUILD_TYPE=release</span><br><span class="line">BUILD_ID=AOSP.MASTER</span><br><span class="line">OUT_DIR=out</span><br><span class="line"></span><br><span class="line">PRODUCT_SOONG_NAMESPACES=device/generic/goldfish device/generic/goldfish-opengl hardware/google/camera hardware/google/camera/devices/EmulatedCamera</span><br><span class="line">============================================</span><br></pre></td></tr></table></figure><h2 id="编译成功-大概花费时长：5h"><a href="#编译成功-大概花费时长：5h" class="headerlink" title="编译成功-大概花费时长：5h"></a>编译成功-大概花费时长：5h</h2><p>第一次编译比较慢，大概5小时左右，编译n次才通过，最后一次 1:43</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Companion.getCachedEstimateIfAvailable(android.content.Context) and 3 other contexts)</span><br><span class="line"><span class="meta">[100%</span><span class="bash"> 11936/11936] Target vbmeta image: out/target/product/generic_x86_64/vbmeta.img<span class="comment">#### build completed successfully (01:43:43 (hh:mm:ss)) ####</span></span></span><br></pre></td></tr></table></figure><p><img src="/2021/07/15/Android-AOSP%EF%BC%88%E4%BA%8C%EF%BC%89%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/image-20210716133228747.png" alt="image-20210716133228747"></p><h2 id="运行模拟器"><a href="#运行模拟器" class="headerlink" title="运行模拟器"></a>运行模拟器</h2><p>在编译完成之后,就可以通过以下命令运行Android虚拟机了，命令如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source build/envsetup.sh</span><br><span class="line">lunch 31</span><br><span class="line">emulator  #如果编译后运行，直接使用此命令</span><br></pre></td></tr></table></figure><p>注：模拟器一直运行失败，问题还未解决~</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brooks@brooks-Mi-Pro:~/aosp$ emulator</span><br><span class="line">emulator: Android emulator version 30.7.4.0 (build_id 7479360) (CL:N/A)</span><br><span class="line">emulator: WARNING: encryption is off</span><br><span class="line">handleCpuAcceleration: feature check for hvf</span><br><span class="line">cannot add library /home/brooks/aosp/prebuilts/android-emulator/linux-x86_64/qemu/linux-x86_64/lib64/vulkan/libvulkan.so: failed</span><br><span class="line">added library /home/brooks/aosp/prebuilts/android-emulator/linux-x86_64/lib64/vulkan/libvulkan.so</span><br><span class="line">INTEL-MESA: warning: Performance support disabled, consider sysctl dev.i915.perf_stream_paranoid=0</span><br></pre></td></tr></table></figure><p>模拟器运行需要四个文件，分别是：</p><ul><li>Linux Kernel</li><li>system.img</li><li>userdata.img</li><li>ramdisk.img</li></ul><p>上面我 lunch 命令时选择的是 aosp_x86_64-eng，因此 linux 默认使用的 AOSP/prebuilds/qemu-kernel/x86_64/kernel-qemu 下的 kernel-qemu，而其他文件则是使用的 AOSP/out/target/product/generic_x86 目录下的 system.img、userdata.img、ramdisk.img。</p><p>感谢：</p><p><a href="http://wuxiaolong.me/2018/07/25/AOSP2/">http://wuxiaolong.me/2018/07/25/AOSP2/</a><br><a href="https://source.android.com/setup/build/building">https://source.android.com/setup/build/building</a><br><a href="http://liuwangshu.cn/framework/aosp/3-compiling-aosp.html">http://liuwangshu.cn/framework/aosp/3-compiling-aosp.html</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/AOSP/">AOSP</category>
      
      
      <category domain="http://example.com/tags/AOSP/">AOSP</category>
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      
    </item>
    
    <item>
      <title>Android AOSP（一）源码和内核源码下载</title>
      <link>http://example.com/2021/07/15/Android%20AOSP%EF%BC%88%E4%B8%80%EF%BC%89%E6%BA%90%E7%A0%81%E5%92%8C%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</link>
      <guid>http://example.com/2021/07/15/Android%20AOSP%EF%BC%88%E4%B8%80%EF%BC%89%E6%BA%90%E7%A0%81%E5%92%8C%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/</guid>
      <pubDate>Thu, 15 Jul 2021 02:30:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;AOSP(Android Open Source Project) 代码库可为您提供所需信息和源代码，供您创建定制的 Android 操作系统版本，将设备和配件移植到 Android 平台。官网：&lt;a href=&quot;https://source.android.google.</description>
        
      
      
      
      <content:encoded><![CDATA[<p>AOSP(Android Open Source Project) 代码库可为您提供所需信息和源代码，供您创建定制的 Android 操作系统版本，将设备和配件移植到 Android 平台。官网：<a href="https://source.android.google.cn/">https://source.android.google.cn/</a></p><h1 id="下载repo"><a href="#下载repo" class="headerlink" title="下载repo"></a>下载repo</h1><p><a href="https://gerrit.googlesource.com/git-repo/+/refs/heads/master/README.md">Repo</a> Google开发的一个工具，整合多个 Git 代码库，自动执行 Android 开发工作流程的部分环节。不会取代 Git，只是为了让您在 Android 环境中更轻松地使用 Git。</p><p>ubuntu输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git  </span><br></pre></td></tr></table></figure><p>配置环境变量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/bin</span><br><span class="line">PATH=~/bin:$PATH</span><br></pre></td></tr></table></figure><p>安装curl：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br></pre></td></tr></table></figure><p>下载repo并设置权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo</span><br><span class="line">chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><p>安装python:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python</span><br></pre></td></tr></table></figure><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><p>建立工作目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir aosp</span><br><span class="line">cd aosp</span><br></pre></td></tr></table></figure><p>初始化仓库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest</span><br></pre></td></tr></table></figure><p>初始化并指定版本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-9.0.0_r8</span><br></pre></td></tr></table></figure><p>同步源码树：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync</span><br></pre></td></tr></table></figure><p>然后等待下载完毕,大概源码大小为 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="下载内核源码"><a href="#下载内核源码" class="headerlink" title="下载内核源码"></a>下载内核源码</h1><p>AOSP源码中并不包括内核源码，需要单独下载，内核源码有很多版本，比如common是通用的Linux内核，msm是用于使用高通MSM芯片的Android设备，goldfish是用于Android模拟器的内核源码，这里以goldfish为例。</p><p>建立工作目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir kernel</span><br><span class="line">cd kernel</span><br></pre></td></tr></table></figure><p>使用清华的镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://aosp.tuna.tsinghua.edu.cn/kernel/goldfish.git</span><br></pre></td></tr></table></figure><p><strong>注：</strong>大概率git下载失败，文件过大。网上搜增加git缓存-依然无效，后来想到国内gitee，借助它完美下载，速度超快。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">完美解决-下载速度快</span></span><br><span class="line">git clone https://gitee.com/gnosz/goldfish.git </span><br></pre></td></tr></table></figure><p>这时kernel目录中会生成一个goldfish文件夹，进入后使用git命令查看有哪些内核版本分支可以下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cd goldfish</span><br><span class="line"></span><br><span class="line">brooks@MiPro:~/kernel/goldfish$ git branch -a</span><br><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/android-3.10</span><br><span class="line">  remotes/origin/android-3.18</span><br><span class="line">  remotes/origin/android-3.4</span><br><span class="line">  remotes/origin/android-4.14</span><br><span class="line">  remotes/origin/android-4.4</span><br><span class="line">  remotes/origin/android-goldfish-2.6.29</span><br><span class="line">  remotes/origin/android-goldfish-3.10</span><br><span class="line">  remotes/origin/android-goldfish-3.10-k-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-l-mr1-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-m-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.10-n-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.18</span><br><span class="line">  remotes/origin/android-goldfish-3.18-dev</span><br><span class="line">  remotes/origin/android-goldfish-3.4</span><br><span class="line">  remotes/origin/android-goldfish-3.4-l-mr1-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.120914098</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.20190417</span><br><span class="line">  remotes/origin/android-goldfish-4.14-dev.backup</span><br><span class="line">  remotes/origin/android-goldfish-4.4-dev</span><br><span class="line">  remotes/origin/android-goldfish-4.9-dev</span><br><span class="line">  remotes/origin/b12</span><br><span class="line">  remotes/origin/b120914098</span><br><span class="line">  remotes/origin/heads/for/android-goldfish-3.18-dev</span><br><span class="line">  remotes/origin/linux-goldfish-3.0-wip</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/test</span><br><span class="line">  remotes/origin/tparker-recovery</span><br></pre></td></tr></table></figure><p>这里选择下载goldfish 3.4版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout remotes/origin/android-goldfish-3.4</span><br></pre></td></tr></table></figure><p>感谢：</p><p><a href="http://liuwangshu.cn/framework/aosp/2-download-aosp.html">http://liuwangshu.cn/framework/aosp/2-download-aosp.html</a><br><a href="https://source.android.google.cn/setup/start">https://source.android.google.cn/setup/start</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/AOSP/">AOSP</category>
      
      
      <category domain="http://example.com/tags/AOSP/">AOSP</category>
      
      <category domain="http://example.com/tags/Android/">Android</category>
      
      
    </item>
    
    <item>
      <title>第一篇《个人博客搭建》</title>
      <link>http://example.com/2021/07/14/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <guid>http://example.com/2021/07/14/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      <pubDate>Wed, 14 Jul 2021 12:30:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;很久之前就想搞个 《个人博客》，直到今天才实现了，感谢大佬的教程，强推给大家。再次表示感谢！&lt;/p&gt;
&lt;p&gt;搭建个人博客教程：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102592286?tdsourcetag=s_pctim_aiomsg</description>
        
      
      
      
      <content:encoded><![CDATA[<p>很久之前就想搞个 《个人博客》，直到今天才实现了，感谢大佬的教程，强推给大家。再次表示感谢！</p><p>搭建个人博客教程：<a href="https://zhuanlan.zhihu.com/p/102592286?tdsourcetag=s_pctim_aiomsg">https://zhuanlan.zhihu.com/p/102592286?tdsourcetag=s_pctim_aiomsg</a></p><p>就像作者所说，唯一需要的就是<strong>耐心、坚持</strong>！ 当你有足够的耐心和动力，仿佛一切都在帮你。成功后的喜悦，希望大家去切身体会。</p><p><img src="/2021/07/14/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/img_car.jpeg"></p><p>贴上一个男人都喜欢的车！</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%9D%82%E8%B0%88/">杂谈</category>
      
      
      <category domain="http://example.com/tags/Blog/">Blog</category>
      
      
    </item>
    
  </channel>
</rss>
